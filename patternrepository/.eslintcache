[{"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx":"1","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\App.tsx":"2","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\index.tsx":"3","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\signUp.tsx":"4","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\signIn.tsx":"5","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\providers\\userProvider.tsx":"6","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\firebase.tsx":"7","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\navigation.tsx":"8"},{"size":281,"mtime":1616764778531,"results":"9","hashOfConfig":"10"},{"size":268,"mtime":1616782048751,"results":"11","hashOfConfig":"10"},{"size":1539,"mtime":1616774964733,"results":"12","hashOfConfig":"10"},{"size":2148,"mtime":1616781370635,"results":"13","hashOfConfig":"10"},{"size":1328,"mtime":1616781322938,"results":"14","hashOfConfig":"10"},{"size":1205,"mtime":1616784671453,"results":"15","hashOfConfig":"10"},{"size":1639,"mtime":1616784723574,"results":"16","hashOfConfig":"10"},{"size":663,"mtime":1616784667515,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"g8f8c4",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx",[],["37","38","39","40","41"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\App.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\signUp.tsx",["42"],"import React from 'react';\nimport { Button, Input, Label } from 'reactstrap';\nimport { auth, generateUserDocument } from '../firebase';\n\nconst SignUp: React.FC = () => {\n    const [username, setUsername] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [passwordRepeat, setPasswordRepeat] = React.useState('');\n\n    const [error, setError] = React.useState<string | null>(null);\n\n    const createUserWithEmailAndPasswordHandler = async (event: any) => {\n        event.preventDefault();\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\n            generateUserDocument(user, { username });\n        } catch (errorData) {\n            setError('Error Signing up with email and password');\n        }\n\n        setUsername('');\n        setEmail('');\n        setPassword('');\n        setPasswordRepeat('');\n        event.preventDefault();\n    };\n\n    return (\n        <div>\n            <Label>Username</Label>\n            <Input\n                placeholder=\"Enter username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <Label>E-mail</Label>\n            <Input\n                placeholder=\"Enter mail\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            <Label>Password</Label>\n            <Input\n                placeholder=\"Enter password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <Label>Repeat password</Label>\n            <Input\n                placeholder=\"Repeat password\"\n                value={passwordRepeat}\n                type=\"password\"\n                onChange={(e) => setPasswordRepeat(e.target.value)}\n            />\n\n            <p>{error}</p>\n            <Button block onClick={createUserWithEmailAndPasswordHandler}>\n                Sign up\n            </Button>\n        </div>\n    );\n};\n\nexport default SignUp;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\signIn.tsx",["43","44"],"import React from 'react';\nimport { Button, Input, Label } from 'reactstrap';\nimport { auth } from '../firebase';\n\nconst SignIn: React.FC = () => {\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const [error, setError] = React.useState<string | null>(null);\n\n    const signInWithEmailAndPasswordHandler = (event: any) => {\n        event.preventDefault();\n        auth.signInWithEmailAndPassword(email, password).catch((errorData) => {\n            setError('Error signing in with password and email!');\n            console.error('Error signing in with password and email', errorData);\n        });\n    };\n\n    return (\n        <div>\n            <Label>E-mail</Label>\n            <Input\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            <Label>password</Label>\n            <Input\n                placeholder=\"Enter password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <p>{error}</p>\n            <Button block onClick={signInWithEmailAndPasswordHandler}>\n                Sign in\n            </Button>\n        </div>\n    );\n};\nexport default SignIn;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\providers\\userProvider.tsx",["45"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\firebase.tsx",["46","47","48","49","50","51","52","53"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\navigation.tsx",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":13,"column":65,"nodeType":"66","messageId":"67","endLine":13,"endColumn":68,"suggestions":"68"},{"ruleId":"64","severity":1,"message":"65","line":11,"column":55,"nodeType":"66","messageId":"67","endLine":11,"endColumn":58,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":15,"column":13,"nodeType":"72","messageId":"73","endLine":15,"endColumn":26},{"ruleId":"64","severity":1,"message":"65","line":21,"column":35,"nodeType":"66","messageId":"67","endLine":21,"endColumn":38,"suggestions":"74"},{"ruleId":"64","severity":1,"message":"65","line":25,"column":37,"nodeType":"66","messageId":"67","endLine":25,"endColumn":40,"suggestions":"75"},{"ruleId":"70","severity":1,"message":"71","line":34,"column":9,"nodeType":"72","messageId":"73","endLine":34,"endColumn":22},{"ruleId":"76","severity":1,"message":"77","line":39,"column":37,"nodeType":"78","messageId":"79","endLine":39,"endColumn":78},{"ruleId":"76","severity":1,"message":"80","line":39,"column":44,"nodeType":"81","messageId":"82","endLine":39,"endColumn":53},{"ruleId":"64","severity":1,"message":"65","line":39,"column":50,"nodeType":"66","messageId":"67","endLine":39,"endColumn":53,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":39,"column":55,"nodeType":"81","messageId":"82","endLine":39,"endColumn":74},{"ruleId":"64","severity":1,"message":"65","line":39,"column":71,"nodeType":"66","messageId":"67","endLine":39,"endColumn":74,"suggestions":"85"},{"ruleId":"70","severity":1,"message":"71","line":52,"column":13,"nodeType":"72","messageId":"73","endLine":52,"endColumn":26},"lines-around-directive",["86"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["87","88"],["89","90"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["91","92"],["93","94"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","Identifier","anyTypedArg",["95","96"],"Argument 'additionalData' should be typed with a non-any type.",["97","98"],"padding-line-between-statements",{"messageId":"99","fix":"100","desc":"101"},{"messageId":"102","fix":"103","desc":"104"},{"messageId":"99","fix":"105","desc":"101"},{"messageId":"102","fix":"106","desc":"104"},{"messageId":"99","fix":"107","desc":"101"},{"messageId":"102","fix":"108","desc":"104"},{"messageId":"99","fix":"109","desc":"101"},{"messageId":"102","fix":"110","desc":"104"},{"messageId":"99","fix":"111","desc":"101"},{"messageId":"102","fix":"112","desc":"104"},{"messageId":"99","fix":"113","desc":"101"},{"messageId":"102","fix":"114","desc":"104"},"suggestUnknown",{"range":"115","text":"116"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"115","text":"117"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"118","text":"116"},{"range":"118","text":"117"},{"range":"119","text":"116"},{"range":"119","text":"117"},{"range":"120","text":"116"},{"range":"120","text":"117"},{"range":"121","text":"116"},{"range":"121","text":"117"},{"range":"122","text":"116"},{"range":"122","text":"117"},[533,536],"unknown","never",[377,380],[609,612],[759,762],[1114,1117],[1135,1138]]