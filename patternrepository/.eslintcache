[{"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx":"1","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\App.tsx":"2","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\index.tsx":"3","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\signUp.tsx":"4","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\signIn.tsx":"5","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\providers\\userProvider.tsx":"6","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\firebase.tsx":"7","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\navigation.tsx":"8","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\pageHeader.tsx":"9","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\userProfile\\index.tsx":"10","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\errorCard.tsx":"11","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\userProfile\\profileEdit.tsx":"12","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\userProfile\\profileView.tsx":"13","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\hooks\\useStorage.tsx":"14","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\firebaseConfig.tsx":"15"},{"size":294,"mtime":1616794887872,"results":"16","hashOfConfig":"17"},{"size":281,"mtime":1616794887871,"results":"18","hashOfConfig":"17"},{"size":1592,"mtime":1616794887874,"results":"19","hashOfConfig":"17"},{"size":2215,"mtime":1616794887875,"results":"20","hashOfConfig":"17"},{"size":1369,"mtime":1616794887874,"results":"21","hashOfConfig":"17"},{"size":1319,"mtime":1617132887235,"results":"22","hashOfConfig":"17"},{"size":1498,"mtime":1617134970281,"results":"23","hashOfConfig":"17"},{"size":734,"mtime":1617032206601,"results":"24","hashOfConfig":"17"},{"size":1821,"mtime":1617101512610,"results":"25","hashOfConfig":"17"},{"size":439,"mtime":1616971830315,"results":"26","hashOfConfig":"17"},{"size":142,"mtime":1616971830312,"results":"27","hashOfConfig":"17"},{"size":4352,"mtime":1617133925908,"results":"28","hashOfConfig":"17"},{"size":2922,"mtime":1617132796567,"results":"29","hashOfConfig":"17"},{"size":1391,"mtime":1617121195903,"results":"30","hashOfConfig":"17"},{"size":404,"mtime":1617134952745,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"g8f8c4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx",[],["68","69","70","71","72"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\App.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\signUp.tsx",["73"],"import React from 'react';\r\nimport { Button, Input, Label } from 'reactstrap';\r\nimport { auth, generateUserDocument } from '../firebase';\r\n\r\nconst SignUp: React.FC = () => {\r\n    const [username, setUsername] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [passwordRepeat, setPasswordRepeat] = React.useState('');\r\n\r\n    const [error, setError] = React.useState<string | null>(null);\r\n\r\n    const createUserWithEmailAndPasswordHandler = async (event: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n            generateUserDocument(user, { username });\r\n        } catch (errorData) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordRepeat('');\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Label>Username</Label>\r\n            <Input\r\n                placeholder=\"Enter username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Label>E-mail</Label>\r\n            <Input\r\n                placeholder=\"Enter mail\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Label>Password</Label>\r\n            <Input\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Label>Repeat password</Label>\r\n            <Input\r\n                placeholder=\"Repeat password\"\r\n                value={passwordRepeat}\r\n                type=\"password\"\r\n                onChange={(e) => setPasswordRepeat(e.target.value)}\r\n            />\r\n\r\n            <p>{error}</p>\r\n            <Button block onClick={createUserWithEmailAndPasswordHandler}>\r\n                Sign up\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\login\\signIn.tsx",["74","75"],"import React from 'react';\r\nimport { Button, Input, Label } from 'reactstrap';\r\nimport { auth } from '../firebase';\r\n\r\nconst SignIn: React.FC = () => {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    const [error, setError] = React.useState<string | null>(null);\r\n\r\n    const signInWithEmailAndPasswordHandler = (event: any) => {\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).catch((errorData) => {\r\n            setError('Error signing in with password and email!');\r\n            console.error('Error signing in with password and email', errorData);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Label>E-mail</Label>\r\n            <Input\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Label>password</Label>\r\n            <Input\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <p>{error}</p>\r\n            <Button block onClick={signInWithEmailAndPasswordHandler}>\r\n                Sign in\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\nexport default SignIn;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\providers\\userProvider.tsx",["76"],"import React, { createContext, useState, useEffect } from 'react';\nimport { auth, generateUserDocument } from '../firebase';\nimport { user } from '../types';\n\nexport const UserContext = createContext<{ user: user }>({\n    user: null,\n});\n\ninterface PropsType {\n    children: JSX.Element;\n}\n\nconst UserProvider: React.FC<PropsType> = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState<{ user: user }>({\n        user: null,\n    });\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\n            if (userAuth) {\n                const signedUser: any = await generateUserDocument(userAuth, null);\n                setCurrentUser({\n                    user: {\n                        uid: signedUser?.uid,\n                        email: signedUser?.email,\n                        username: signedUser?.username,\n                        avatar: signedUser?.avatar,\n                        description: signedUser?.description,\n                    },\n                });\n            } else {\n                setCurrentUser({ user: null });\n            }\n        });\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n\n    return <UserContext.Provider value={currentUser}>{children}</UserContext.Provider>;\n};\n\nexport default UserProvider;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\firebase.tsx",["77","78","79","80","81","82","83","84"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\navigation.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\pageHeader.tsx",["85"],"import React, { useContext } from 'react';\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap';\nimport { auth } from './firebase';\n\nimport { UserContext } from './providers/userProvider';\n\nconst PageHeader: React.FC = () => {\n    const { user } = useContext(UserContext);\n\n    const logOutHandler = (event: any) => {\n        event.preventDefault();\n        auth.signOut();\n    };\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/\">patternRepository</NavbarBrand>\n\n                <Nav className=\"\" navbar style={{ width: '-webkit-fill-available' }}>\n                    <NavItem>\n                        <NavLink href=\"/\">Home</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/patterns\">Browse patterns</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/smth\">Smth</NavLink>\n                    </NavItem>\n                    <UncontrolledDropdown nav inNavbar style={{ marginLeft: 'auto' }}>\n                        <DropdownToggle nav caret>\n                            {`Welcome ${user?.username}`}\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem href={`/profile/${user?.uid}`}>Profile</DropdownItem>\n                            <DropdownItem divider />\n                            <DropdownItem onClick={logOutHandler}>Log out</DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </Nav>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default PageHeader;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\userProfile\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\errorCard.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\userProfile\\profileEdit.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\userProfile\\profileView.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\hooks\\useStorage.tsx",["86"],"import { useState, useContext } from 'react';\n\nimport { storage } from '../firebase';\n\nimport { UserContext } from '../providers/userProvider';\n\nconst useStorage = (file: File | null) => {\n    const { user } = useContext(UserContext);\n\n    const [progress, setProgress] = useState<number>(0);\n    const [error, setError] = useState<string | null>(null);\n    const [url, setUrl] = useState<string | null>(null);\n\n    // runs every time the file value changes\n    const uploadImage = () => {\n        if (file) {\n            // storage ref\n            const storageRef = storage.ref(`avatars/${user?.uid}`);\n\n            storageRef.put(file).on(\n                'state_changed',\n                (snap) => {\n                    // track the upload progress\n                    const percentage = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\n                    setProgress(percentage);\n                },\n                (err) => {\n                    setError(err.message);\n                },\n                async () => {\n                    // get the public download img url\n                    const downloadUrl = await storageRef.getDownloadURL();\n\n                    // save the url to local state\n                    setUrl(downloadUrl);\n                },\n            );\n        }\n    };\n\n    return { progress, url, error, uploadImage };\n};\nexport default useStorage;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\firebaseConfig.tsx",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":13,"column":65,"nodeType":"99","messageId":"100","endLine":13,"endColumn":68,"suggestions":"101"},{"ruleId":"97","severity":1,"message":"98","line":11,"column":55,"nodeType":"99","messageId":"100","endLine":11,"endColumn":58,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":15,"column":13,"nodeType":"105","messageId":"106","endLine":15,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":21,"column":35,"nodeType":"99","messageId":"100","endLine":21,"endColumn":38,"suggestions":"107"},{"ruleId":"97","severity":1,"message":"98","line":19,"column":37,"nodeType":"99","messageId":"100","endLine":19,"endColumn":40,"suggestions":"108"},{"ruleId":"103","severity":1,"message":"104","line":30,"column":9,"nodeType":"105","messageId":"106","endLine":30,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":35,"column":37,"nodeType":"111","messageId":"112","endLine":35,"endColumn":78},{"ruleId":"109","severity":1,"message":"113","line":35,"column":44,"nodeType":"114","messageId":"115","endLine":35,"endColumn":53},{"ruleId":"97","severity":1,"message":"98","line":35,"column":50,"nodeType":"99","messageId":"100","endLine":35,"endColumn":53,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":35,"column":55,"nodeType":"114","messageId":"115","endLine":35,"endColumn":74},{"ruleId":"97","severity":1,"message":"98","line":35,"column":71,"nodeType":"99","messageId":"100","endLine":35,"endColumn":74,"suggestions":"118"},{"ruleId":"103","severity":1,"message":"104","line":48,"column":13,"nodeType":"105","messageId":"106","endLine":48,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":20,"column":35,"nodeType":"99","messageId":"100","endLine":20,"endColumn":38,"suggestions":"119"},{"ruleId":"109","severity":1,"message":"110","line":7,"column":20,"nodeType":"111","messageId":"112","endLine":7,"endColumn":42},"lines-around-directive",["120"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["121","122"],["123","124"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["125","126"],["127","128"],"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","Identifier","anyTypedArg",["129","130"],"Argument 'additionalData' should be typed with a non-any type.",["131","132"],["133","134"],"padding-line-between-statements",{"messageId":"135","fix":"136","desc":"137"},{"messageId":"138","fix":"139","desc":"140"},{"messageId":"135","fix":"141","desc":"137"},{"messageId":"138","fix":"142","desc":"140"},{"messageId":"135","fix":"143","desc":"137"},{"messageId":"138","fix":"144","desc":"140"},{"messageId":"135","fix":"145","desc":"137"},{"messageId":"138","fix":"146","desc":"140"},{"messageId":"135","fix":"147","desc":"137"},{"messageId":"138","fix":"148","desc":"140"},{"messageId":"135","fix":"149","desc":"137"},{"messageId":"138","fix":"150","desc":"140"},{"messageId":"135","fix":"151","desc":"137"},{"messageId":"138","fix":"152","desc":"140"},"suggestUnknown",{"range":"153","text":"154"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"153","text":"155"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"156","text":"154"},{"range":"156","text":"155"},{"range":"157","text":"154"},{"range":"157","text":"155"},{"range":"158","text":"154"},{"range":"158","text":"155"},{"range":"159","text":"154"},{"range":"159","text":"155"},{"range":"160","text":"154"},{"range":"160","text":"155"},{"range":"161","text":"154"},{"range":"161","text":"155"},[545,548],"unknown","never",[387,390],[609,612],[504,507],[973,976],[994,997],[430,433]]