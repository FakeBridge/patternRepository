[{"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx":"1","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx":"2","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx":"3","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx":"4","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx":"5","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx":"6","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx":"7","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx":"8","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx":"9","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx":"10","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx":"11","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx":"12","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx":"13","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx":"14","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx":"15","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx":"16","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx":"17","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx":"18","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx":"19","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx":"20","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx":"21","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx":"22","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx":"23","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx":"24"},{"size":307,"mtime":1617579618711,"results":"25","hashOfConfig":"26"},{"size":288,"mtime":1617579618701,"results":"27","hashOfConfig":"26"},{"size":894,"mtime":1618134679807,"results":"28","hashOfConfig":"26"},{"size":1362,"mtime":1617579618713,"results":"29","hashOfConfig":"26"},{"size":1891,"mtime":1617579618705,"results":"30","hashOfConfig":"26"},{"size":1550,"mtime":1617579618711,"results":"31","hashOfConfig":"26"},{"size":1592,"mtime":1617579618703,"results":"32","hashOfConfig":"26"},{"size":142,"mtime":1617579618702,"results":"33","hashOfConfig":"26"},{"size":439,"mtime":1617579618708,"results":"34","hashOfConfig":"26"},{"size":2224,"mtime":1617579618704,"results":"35","hashOfConfig":"26"},{"size":415,"mtime":1617579618712,"results":"36","hashOfConfig":"26"},{"size":1378,"mtime":1617579618703,"results":"37","hashOfConfig":"26"},{"size":4641,"mtime":1617579618708,"results":"38","hashOfConfig":"26"},{"size":3011,"mtime":1617579618709,"results":"39","hashOfConfig":"26"},{"size":1362,"mtime":1617579618712,"results":"40","hashOfConfig":"26"},{"size":1705,"mtime":1618171629711,"results":"41","hashOfConfig":"26"},{"size":13125,"mtime":1618171705776,"results":"42","hashOfConfig":"26"},{"size":196,"mtime":1617283949558,"results":"43","hashOfConfig":"26"},{"size":2213,"mtime":1618134679810,"results":"44","hashOfConfig":"26"},{"size":859,"mtime":1618163097019,"results":"45","hashOfConfig":"26"},{"size":937,"mtime":1618163533303,"results":"46","hashOfConfig":"26"},{"size":2460,"mtime":1618160585680,"results":"47","hashOfConfig":"26"},{"size":12959,"mtime":1618172513246,"results":"48","hashOfConfig":"26"},{"size":650,"mtime":1618163818201,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"g8f8c4",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx",[],["107","108","109","110","111"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx",["112"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\nimport { user } from '../types';\r\n\r\nexport const UserContext = createContext<{ user: user }>({\r\n    user: null,\r\n});\r\n\r\ninterface PropsType {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst UserProvider: React.FC<PropsType> = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState<{ user: user }>({\r\n        user: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                const signedUser: any = await generateUserDocument(userAuth, null);\r\n                setCurrentUser({\r\n                    user: {\r\n                        uid: signedUser?.uid,\r\n                        email: signedUser?.email,\r\n                        username: signedUser?.username,\r\n                        avatar: signedUser?.avatar,\r\n                        description: signedUser?.description,\r\n                    },\r\n                });\r\n            } else {\r\n                setCurrentUser({ user: null });\r\n            }\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    return <UserContext.Provider value={currentUser}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport default UserProvider;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx",["113"],"import React, { useContext } from 'react';\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n} from 'reactstrap';\r\nimport { auth } from '../logic/firebase';\r\n\r\nimport { UserContext } from '../logic/providers/userProvider';\r\n\r\nconst PageHeader: React.FC = () => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const logOutHandler = (event: any) => {\r\n        event.preventDefault();\r\n        auth.signOut();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand href=\"/\">patternRepository</NavbarBrand>\r\n\r\n                <Nav className=\"\" navbar style={{ width: '-webkit-fill-available' }}>\r\n                    <NavItem>\r\n                        <NavLink href=\"/\">Home</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/patterns\">Browse patterns</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/smth\">Smth</NavLink>\r\n                    </NavItem>\r\n                    <UncontrolledDropdown nav inNavbar style={{ marginLeft: 'auto' }}>\r\n                        <DropdownToggle nav caret>\r\n                            {`Welcome ${user?.username}`}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                            <DropdownItem href={`/profile/${user?.uid}`}>Profile</DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem onClick={logOutHandler}>Log out</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageHeader;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx",["114","115","116","117","118","119","120","121"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n} else {\r\n    firebase.app(); // if already initialized, use that one\r\n}\r\n\r\n// firebase.initializeApp();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        const userAvatar = await storage.ref(`/avatars/${uid}`).getDownloadURL();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n            avatar: userAvatar,\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching user', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const generateUserDocument = async (user: any, additionalData: any) => {\r\n    if (!user) return {};\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email } = user;\r\n        try {\r\n            await userRef.set({\r\n                username: user.username,\r\n                email,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx",["122"],"import React from 'react';\r\nimport { Button, Input, Label } from 'reactstrap';\r\nimport { auth, generateUserDocument } from '../../logic/firebase';\r\n\r\nconst SignUp: React.FC = () => {\r\n    const [username, setUsername] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [passwordRepeat, setPasswordRepeat] = React.useState('');\r\n\r\n    const [error, setError] = React.useState<string | null>(null);\r\n\r\n    const createUserWithEmailAndPasswordHandler = async (event: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n            generateUserDocument(user, { username });\r\n        } catch (errorData) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordRepeat('');\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Label>Username</Label>\r\n            <Input\r\n                placeholder=\"Enter username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Label>E-mail</Label>\r\n            <Input\r\n                placeholder=\"Enter mail\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Label>Password</Label>\r\n            <Input\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Label>Repeat password</Label>\r\n            <Input\r\n                placeholder=\"Repeat password\"\r\n                value={passwordRepeat}\r\n                type=\"password\"\r\n                onChange={(e) => setPasswordRepeat(e.target.value)}\r\n            />\r\n\r\n            <p>{error}</p>\r\n            <Button block onClick={createUserWithEmailAndPasswordHandler}>\r\n                Sign up\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx",["123","124"],"import React from 'react';\r\nimport { Button, Input, Label } from 'reactstrap';\r\nimport { auth } from '../../logic/firebase';\r\n\r\nconst SignIn: React.FC = () => {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    const [error, setError] = React.useState<string | null>(null);\r\n\r\n    const signInWithEmailAndPasswordHandler = (event: any) => {\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).catch((errorData) => {\r\n            setError('Error signing in with password and email!');\r\n            console.error('Error signing in with password and email', errorData);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Label>E-mail</Label>\r\n            <Input\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Label>password</Label>\r\n            <Input\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <p>{error}</p>\r\n            <Button block onClick={signInWithEmailAndPasswordHandler}>\r\n                Sign in\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\nexport default SignIn;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx",["125"],"import { useState } from 'react';\r\n\r\nimport { storage } from '../firebase';\r\n\r\nconst useStorage = (file: File | null) => {\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [url, setUrl] = useState<string | null>(null);\r\n\r\n    // runs every time the file value changes\r\n    const uploadImage = (storageName: string, pictureName: string) => {\r\n        if (file) {\r\n            // storage ref\r\n            const storageRef = storage.ref(`${storageName}/${pictureName}`);\r\n\r\n            storageRef.put(file).on(\r\n                'state_changed',\r\n                (snap) => {\r\n                    // track the upload progress\r\n                    const percentage = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\r\n                    setProgress(percentage);\r\n                },\r\n                (err) => {\r\n                    setError(err.message);\r\n                },\r\n                async () => {\r\n                    // get the public download img url\r\n                    const downloadUrl = await storageRef.getDownloadURL();\r\n\r\n                    // save the url to local state\r\n                    setUrl(downloadUrl);\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    return { progress, url, error, uploadImage };\r\n};\r\nexport default useStorage;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx",["126","127","128"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx",["129","130","131"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx",["132","133"],"import React, { useState, useEffect } from 'react';\r\nimport PatternService from '../../logic/services/patternServices';\r\n\r\nimport { pattern as patternType, basicImage } from '../../logic/types';\r\n\r\ninterface PropsType {\r\n    setCurrentPattern: (pattern: patternType) => void;\r\n}\r\n\r\nconst List: React.FC<PropsType> = ({ setCurrentPattern }) => {\r\n    const [patterns, setPatterns] = useState<patternType[]>([]);\r\n\r\n    const onDataChange = (items: any) => {\r\n        let loadedPatterns: patternType[] = [];\r\n        loadedPatterns = [];\r\n\r\n        items.docs.forEach((item: any) => {\r\n            const { id } = item;\r\n            const data = item.data();\r\n\r\n            loadedPatterns.push({\r\n                id,\r\n                title: data.title,\r\n                description: data.description,\r\n                difficulty: data.difficulty,\r\n                owner: data.owner,\r\n                patternImages: data.patternImages,\r\n                finishedWorkImages: data.finishedWorkImages,\r\n            });\r\n        });\r\n\r\n        setPatterns(loadedPatterns);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = PatternService.getAll()\r\n            .orderBy('title', 'asc')\r\n            .onSnapshot(onDataChange);\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {patterns.map((pattern: patternType) => (\r\n                <div key={pattern.id} style={{ width: '33%', backgroundColor: 'aliceblue' }}>\r\n                    <button type=\"button\" onClick={() => setCurrentPattern(pattern)}>\r\n                        Detail\r\n                    </button>\r\n                    <h2>{pattern.title}</h2>\r\n                    {pattern.finishedWorkImages.slice(0, 3).map((image: basicImage) => (\r\n                        <img\r\n                            key={image.name}\r\n                            src={image.url}\r\n                            alt={image.name}\r\n                            width=\"100px\"\r\n                            height=\"100px\"\r\n                        />\r\n                    ))}\r\n                    <p>{pattern.description?.slice(0, 250)}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx",["134","135","136","137","138","139"],"import { firestore, auth } from '../firebase';\nimport { patternToAdd } from '../types';\n\nconst collectionRef = firestore.collection('/patterns');\n\nconst getAll = () => {\n    return collectionRef;\n};\n\nconst getAllMine = () => {\n    if (auth?.currentUser?.uid) {\n        return collectionRef.where('owner', '==', auth.currentUser.uid);\n    }\n    return [];\n};\n\nconst create = (data: patternToAdd) => {\n    return collectionRef.add(data);\n};\n\nconst update = (id: string, value: patternToAdd) => {\n    return collectionRef.doc(id).update(value);\n};\n\nconst set = (id: string, value: patternToAdd) => {\n    return collectionRef.doc(id).set(value);\n};\n\nconst remove = (id: string) => {\n    return collectionRef.doc(id).delete();\n};\n\nconst PatternService = {\n    getAll,\n    getAllMine,\n    set,\n    create,\n    update,\n    remove,\n};\n\nexport default PatternService;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx",["140","141"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx",["142","143","144","145","146"],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":21,"column":35,"nodeType":"159","messageId":"160","endLine":21,"endColumn":38,"suggestions":"161"},{"ruleId":"157","severity":1,"message":"158","line":20,"column":35,"nodeType":"159","messageId":"160","endLine":20,"endColumn":38,"suggestions":"162"},{"ruleId":"157","severity":1,"message":"158","line":19,"column":37,"nodeType":"159","messageId":"160","endLine":19,"endColumn":40,"suggestions":"163"},{"ruleId":"164","severity":1,"message":"165","line":30,"column":9,"nodeType":"166","messageId":"167","endLine":30,"endColumn":22},{"ruleId":"168","severity":1,"message":"169","line":35,"column":37,"nodeType":"170","messageId":"171","endLine":35,"endColumn":78},{"ruleId":"168","severity":1,"message":"172","line":35,"column":44,"nodeType":"173","messageId":"174","endLine":35,"endColumn":53},{"ruleId":"157","severity":1,"message":"158","line":35,"column":50,"nodeType":"159","messageId":"160","endLine":35,"endColumn":53,"suggestions":"175"},{"ruleId":"168","severity":1,"message":"176","line":35,"column":55,"nodeType":"173","messageId":"174","endLine":35,"endColumn":74},{"ruleId":"157","severity":1,"message":"158","line":35,"column":71,"nodeType":"159","messageId":"160","endLine":35,"endColumn":74,"suggestions":"177"},{"ruleId":"164","severity":1,"message":"165","line":48,"column":13,"nodeType":"166","messageId":"167","endLine":48,"endColumn":26},{"ruleId":"157","severity":1,"message":"158","line":13,"column":65,"nodeType":"159","messageId":"160","endLine":13,"endColumn":68,"suggestions":"178"},{"ruleId":"157","severity":1,"message":"158","line":11,"column":55,"nodeType":"159","messageId":"160","endLine":11,"endColumn":58,"suggestions":"179"},{"ruleId":"164","severity":1,"message":"165","line":15,"column":13,"nodeType":"166","messageId":"167","endLine":15,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":5,"column":20,"nodeType":"170","messageId":"171","endLine":5,"endColumn":42},{"ruleId":"180","severity":1,"message":"181","line":39,"column":36,"nodeType":"182","messageId":"183","endLine":39,"endColumn":45},{"ruleId":"157","severity":1,"message":"158","line":47,"column":37,"nodeType":"159","messageId":"160","endLine":47,"endColumn":40,"suggestions":"184"},{"ruleId":"157","severity":1,"message":"158","line":51,"column":35,"nodeType":"159","messageId":"160","endLine":51,"endColumn":38,"suggestions":"185"},{"ruleId":"186","severity":2,"message":"187","line":1,"column":13,"nodeType":"173","messageId":"188","endLine":1,"endColumn":17},{"ruleId":"186","severity":2,"message":"189","line":3,"column":6,"nodeType":"173","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"186","severity":2,"message":"190","line":11,"column":13,"nodeType":"173","messageId":"188","endLine":11,"endColumn":20},{"ruleId":"157","severity":1,"message":"158","line":13,"column":34,"nodeType":"159","messageId":"160","endLine":13,"endColumn":37,"suggestions":"191"},{"ruleId":"157","severity":1,"message":"158","line":17,"column":35,"nodeType":"159","messageId":"160","endLine":17,"endColumn":38,"suggestions":"192"},{"ruleId":"168","severity":1,"message":"169","line":6,"column":16,"nodeType":"170","messageId":"171","endLine":6,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":10,"column":20,"nodeType":"170","messageId":"171","endLine":10,"endColumn":25},{"ruleId":"168","severity":1,"message":"169","line":17,"column":16,"nodeType":"170","messageId":"171","endLine":17,"endColumn":39},{"ruleId":"168","severity":1,"message":"169","line":21,"column":16,"nodeType":"170","messageId":"171","endLine":21,"endColumn":52},{"ruleId":"168","severity":1,"message":"169","line":25,"column":13,"nodeType":"170","messageId":"171","endLine":25,"endColumn":49},{"ruleId":"168","severity":1,"message":"169","line":29,"column":16,"nodeType":"170","messageId":"171","endLine":29,"endColumn":31},{"ruleId":"157","severity":1,"message":"158","line":42,"column":37,"nodeType":"159","messageId":"160","endLine":42,"endColumn":40,"suggestions":"193"},{"ruleId":"157","severity":1,"message":"158","line":46,"column":35,"nodeType":"159","messageId":"160","endLine":46,"endColumn":38,"suggestions":"194"},{"ruleId":"168","severity":1,"message":"169","line":6,"column":16,"nodeType":"170","messageId":"171","endLine":6,"endColumn":21},{"ruleId":"168","severity":1,"message":"169","line":10,"column":16,"nodeType":"170","messageId":"171","endLine":10,"endColumn":35},{"ruleId":"168","severity":1,"message":"169","line":14,"column":16,"nodeType":"170","messageId":"171","endLine":14,"endColumn":48},{"ruleId":"168","severity":1,"message":"169","line":18,"column":13,"nodeType":"170","messageId":"171","endLine":18,"endColumn":45},{"ruleId":"168","severity":1,"message":"169","line":22,"column":16,"nodeType":"170","messageId":"171","endLine":22,"endColumn":31},"lines-around-directive",["195"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["196","197"],["198","199"],["200","201"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","Identifier","anyTypedArg",["202","203"],"Argument 'additionalData' should be typed with a non-any type.",["204","205"],["206","207"],["208","209"],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed",["210","211"],["212","213"],"@typescript-eslint/naming-convention","Type Alias name `user` must match one of the following formats: PascalCase","doesNotMatchFormat","Type Alias name `userInfo` must match one of the following formats: PascalCase","Type Alias name `picture` must match one of the following formats: PascalCase",["214","215"],["216","217"],["218","219"],["220","221"],"padding-line-between-statements",{"messageId":"222","fix":"223","desc":"224"},{"messageId":"225","fix":"226","desc":"227"},{"messageId":"222","fix":"228","desc":"224"},{"messageId":"225","fix":"229","desc":"227"},{"messageId":"222","fix":"230","desc":"224"},{"messageId":"225","fix":"231","desc":"227"},{"messageId":"222","fix":"232","desc":"224"},{"messageId":"225","fix":"233","desc":"227"},{"messageId":"222","fix":"234","desc":"224"},{"messageId":"225","fix":"235","desc":"227"},{"messageId":"222","fix":"236","desc":"224"},{"messageId":"225","fix":"237","desc":"227"},{"messageId":"222","fix":"238","desc":"224"},{"messageId":"225","fix":"239","desc":"227"},{"messageId":"222","fix":"240","desc":"224"},{"messageId":"225","fix":"241","desc":"227"},{"messageId":"222","fix":"242","desc":"224"},{"messageId":"225","fix":"243","desc":"227"},{"messageId":"222","fix":"244","desc":"224"},{"messageId":"225","fix":"245","desc":"227"},{"messageId":"222","fix":"246","desc":"224"},{"messageId":"225","fix":"247","desc":"227"},{"messageId":"222","fix":"248","desc":"224"},{"messageId":"225","fix":"249","desc":"227"},{"messageId":"222","fix":"250","desc":"224"},{"messageId":"225","fix":"251","desc":"227"},"suggestUnknown",{"range":"252","text":"253"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"252","text":"254"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"255","text":"253"},{"range":"255","text":"254"},{"range":"256","text":"253"},{"range":"256","text":"254"},{"range":"257","text":"253"},{"range":"257","text":"254"},{"range":"258","text":"253"},{"range":"258","text":"254"},{"range":"259","text":"253"},{"range":"259","text":"254"},{"range":"260","text":"253"},{"range":"260","text":"254"},{"range":"261","text":"253"},{"range":"261","text":"254"},{"range":"262","text":"253"},{"range":"262","text":"254"},{"range":"263","text":"253"},{"range":"263","text":"254"},{"range":"264","text":"253"},{"range":"264","text":"254"},{"range":"265","text":"253"},{"range":"265","text":"254"},{"range":"266","text":"253"},{"range":"266","text":"254"},[629,632],"unknown","never",[463,466],[522,525],[1007,1010],[1028,1031],[554,557],[396,399],[1799,1802],[1905,1908],[447,450],[573,576],[1690,1693],[1800,1803]]