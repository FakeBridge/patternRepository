[{"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx":"1","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx":"2","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx":"3","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx":"4","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx":"5","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx":"6","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx":"7","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx":"8","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx":"9","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx":"10","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx":"11","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx":"12","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx":"13","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx":"14","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx":"15","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx":"16","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx":"17","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx":"18","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx":"19","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx":"20","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx":"21","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx":"22","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx":"23","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx":"24"},{"size":307,"mtime":1617579618711,"results":"25","hashOfConfig":"26"},{"size":275,"mtime":1618332485543,"results":"27","hashOfConfig":"26"},{"size":868,"mtime":1618332648996,"results":"28","hashOfConfig":"26"},{"size":1362,"mtime":1617579618713,"results":"29","hashOfConfig":"26"},{"size":1835,"mtime":1618331783438,"results":"30","hashOfConfig":"26"},{"size":1550,"mtime":1617579618711,"results":"31","hashOfConfig":"26"},{"size":1539,"mtime":1618332539613,"results":"32","hashOfConfig":"26"},{"size":135,"mtime":1618332767713,"results":"33","hashOfConfig":"26"},{"size":423,"mtime":1618332668472,"results":"34","hashOfConfig":"26"},{"size":2141,"mtime":1618332599227,"results":"35","hashOfConfig":"26"},{"size":415,"mtime":1617579618712,"results":"36","hashOfConfig":"26"},{"size":1425,"mtime":1618332557253,"results":"37","hashOfConfig":"26"},{"size":4504,"mtime":1618332707171,"results":"38","hashOfConfig":"26"},{"size":2941,"mtime":1618332684644,"results":"39","hashOfConfig":"26"},{"size":1362,"mtime":1617579618712,"results":"40","hashOfConfig":"26"},{"size":1761,"mtime":1618331779353,"results":"41","hashOfConfig":"26"},{"size":13166,"mtime":1618334936543,"results":"42","hashOfConfig":"26"},{"size":196,"mtime":1617283949558,"results":"43","hashOfConfig":"26"},{"size":2164,"mtime":1618335797875,"results":"44","hashOfConfig":"26"},{"size":901,"mtime":1618172623977,"results":"45","hashOfConfig":"26"},{"size":1001,"mtime":1618332742996,"results":"46","hashOfConfig":"26"},{"size":2646,"mtime":1618335935251,"results":"47","hashOfConfig":"26"},{"size":15555,"mtime":1618335672543,"results":"48","hashOfConfig":"26"},{"size":684,"mtime":1618172623977,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"g8f8c4",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx",[],["107","108","109","110","111"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx",["112"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\nimport { user } from '../types';\r\n\r\nexport const UserContext = createContext<{ user: user }>({\r\n    user: null,\r\n});\r\n\r\ninterface PropsType {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst UserProvider: React.FC<PropsType> = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState<{ user: user }>({\r\n        user: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                const signedUser: any = await generateUserDocument(userAuth, null);\r\n                setCurrentUser({\r\n                    user: {\r\n                        uid: signedUser?.uid,\r\n                        email: signedUser?.email,\r\n                        username: signedUser?.username,\r\n                        avatar: signedUser?.avatar,\r\n                        description: signedUser?.description,\r\n                    },\r\n                });\r\n            } else {\r\n                setCurrentUser({ user: null });\r\n            }\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    return <UserContext.Provider value={currentUser}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport default UserProvider;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx",["113"],"import React, { useContext } from 'react';\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap';\nimport { auth } from '../logic/firebase';\n\nimport { UserContext } from '../logic/providers/userProvider';\n\nconst PageHeader: React.FC = () => {\n    const { user } = useContext(UserContext);\n\n    const logOutHandler = (event: any) => {\n        event.preventDefault();\n        auth.signOut();\n    };\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/\">patternRepository</NavbarBrand>\n\n                <Nav className=\"\" navbar style={{ width: '-webkit-fill-available' }}>\n                    <NavItem>\n                        <NavLink href=\"/\">Home</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/patterns\">Browse patterns</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/smth\">Smth</NavLink>\n                    </NavItem>\n                    <UncontrolledDropdown nav inNavbar style={{ marginLeft: 'auto' }}>\n                        <DropdownToggle nav caret>\n                            {`Welcome ${user?.username}`}\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem href={`/profile/${user?.uid}`}>Profile</DropdownItem>\n                            <DropdownItem divider />\n                            <DropdownItem onClick={logOutHandler}>Log out</DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </Nav>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default PageHeader;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx",["114","115","116","117","118","119","120","121"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n} else {\r\n    firebase.app(); // if already initialized, use that one\r\n}\r\n\r\n// firebase.initializeApp();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        const userAvatar = await storage.ref(`/avatars/${uid}`).getDownloadURL();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n            avatar: userAvatar,\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching user', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const generateUserDocument = async (user: any, additionalData: any) => {\r\n    if (!user) return {};\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email } = user;\r\n        try {\r\n            await userRef.set({\r\n                username: user.username,\r\n                email,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx",["122"],"import React, { useState } from 'react';\nimport { Button, Input, Label } from 'reactstrap';\nimport { auth, generateUserDocument } from '../../logic/firebase';\n\nconst SignUp: React.FC = () => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordRepeat, setPasswordRepeat] = useState('');\n\n    const [error, setError] = useState<string | null>(null);\n\n    const createUserWithEmailAndPasswordHandler = async (event: any) => {\n        event.preventDefault();\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\n            generateUserDocument(user, { username });\n        } catch (errorData) {\n            setError('Error Signing up with email and password');\n        }\n\n        setUsername('');\n        setEmail('');\n        setPassword('');\n        setPasswordRepeat('');\n        event.preventDefault();\n    };\n\n    return (\n        <div>\n            <Label>Username</Label>\n            <Input\n                placeholder=\"Enter username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <Label>E-mail</Label>\n            <Input\n                placeholder=\"Enter mail\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            <Label>Password</Label>\n            <Input\n                placeholder=\"Enter password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <Label>Repeat password</Label>\n            <Input\n                placeholder=\"Repeat password\"\n                value={passwordRepeat}\n                type=\"password\"\n                onChange={(e) => setPasswordRepeat(e.target.value)}\n            />\n\n            <p>{error}</p>\n            <Button block onClick={createUserWithEmailAndPasswordHandler}>\n                Sign up\n            </Button>\n        </div>\n    );\n};\n\nexport default SignUp;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx",["123","124"],"import React, { useState, useCallback } from 'react';\nimport { Button, Input, Label } from 'reactstrap';\nimport { auth } from '../../logic/firebase';\n\nconst SignIn: React.FC = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const [error, setError] = useState<string | null>(null);\n\n    const signInWithEmailAndPasswordHandler = useCallback(\n        (event: any) => {\n            event.preventDefault();\n            auth.signInWithEmailAndPassword(email, password).catch((errorData) => {\n                setError('Error signing in with password and email!');\n                console.error('Error signing in with password and email', errorData);\n            });\n        },\n        [email, password],\n    );\n\n    return (\n        <div>\n            <Label>E-mail</Label>\n            <Input\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            <Label>password</Label>\n            <Input\n                placeholder=\"Enter password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <p>{error}</p>\n            <Button block onClick={signInWithEmailAndPasswordHandler}>\n                Sign in\n            </Button>\n        </div>\n    );\n};\nexport default SignIn;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx",["125"],"import { useState } from 'react';\r\n\r\nimport { storage } from '../firebase';\r\n\r\nconst useStorage = (file: File | null) => {\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [url, setUrl] = useState<string | null>(null);\r\n\r\n    // runs every time the file value changes\r\n    const uploadImage = (storageName: string, pictureName: string) => {\r\n        if (file) {\r\n            // storage ref\r\n            const storageRef = storage.ref(`${storageName}/${pictureName}`);\r\n\r\n            storageRef.put(file).on(\r\n                'state_changed',\r\n                (snap) => {\r\n                    // track the upload progress\r\n                    const percentage = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\r\n                    setProgress(percentage);\r\n                },\r\n                (err) => {\r\n                    setError(err.message);\r\n                },\r\n                async () => {\r\n                    // get the public download img url\r\n                    const downloadUrl = await storageRef.getDownloadURL();\r\n\r\n                    // save the url to local state\r\n                    setUrl(downloadUrl);\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    return { progress, url, error, uploadImage };\r\n};\r\nexport default useStorage;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx",["126","127","128","129","130","131"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx",["132","133","134"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx",["135","136"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx",["137","138","139","140","141","142"],"import { firestore, auth } from '../firebase';\r\nimport { patternToAdd } from '../types';\r\n\r\nconst collectionRef = firestore.collection('/patterns');\r\n\r\nconst getAll = () => {\r\n    return collectionRef;\r\n};\r\n\r\nconst getAllMine = () => {\r\n    if (auth?.currentUser?.uid) {\r\n        return collectionRef.where('owner', '==', auth.currentUser.uid);\r\n    }\r\n    return [];\r\n};\r\n\r\nconst create = (data: patternToAdd) => {\r\n    return collectionRef.add(data);\r\n};\r\n\r\nconst update = (id: string, value: patternToAdd) => {\r\n    return collectionRef.doc(id).update(value);\r\n};\r\n\r\nconst set = (id: string, value: patternToAdd) => {\r\n    return collectionRef.doc(id).set(value);\r\n};\r\n\r\nconst remove = (id: string) => {\r\n    return collectionRef.doc(id).delete();\r\n};\r\n\r\nconst PatternService = {\r\n    getAll,\r\n    getAllMine,\r\n    set,\r\n    create,\r\n    update,\r\n    remove,\r\n};\r\n\r\nexport default PatternService;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx",["143"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx",["144","145","146","147","148"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx",["149","150","151","152","153"],"import { firestore } from '../firebase';\r\nimport { tagToAdd } from '../types';\r\n\r\nconst collectionRef = firestore.collection('/tags');\r\n\r\nconst getAll = () => {\r\n    return collectionRef;\r\n};\r\n\r\nconst create = (data: tagToAdd) => {\r\n    return collectionRef.add(data);\r\n};\r\n\r\nconst update = (id: string, value: tagToAdd) => {\r\n    return collectionRef.doc(id).update(value);\r\n};\r\n\r\nconst set = (id: string, value: tagToAdd) => {\r\n    return collectionRef.doc(id).set(value);\r\n};\r\n\r\nconst remove = (id: string) => {\r\n    return collectionRef.doc(id).delete();\r\n};\r\n\r\nconst TagService = {\r\n    getAll,\r\n    set,\r\n    create,\r\n    update,\r\n    remove,\r\n};\r\n\r\nexport default TagService;\r\n",{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":21,"column":35,"nodeType":"166","messageId":"167","endLine":21,"endColumn":38,"suggestions":"168"},{"ruleId":"164","severity":1,"message":"165","line":20,"column":35,"nodeType":"166","messageId":"167","endLine":20,"endColumn":38,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"165","line":19,"column":37,"nodeType":"166","messageId":"167","endLine":19,"endColumn":40,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":30,"column":9,"nodeType":"173","messageId":"174","endLine":30,"endColumn":22},{"ruleId":"175","severity":1,"message":"176","line":35,"column":37,"nodeType":"177","messageId":"178","endLine":35,"endColumn":78},{"ruleId":"175","severity":1,"message":"179","line":35,"column":44,"nodeType":"180","messageId":"181","endLine":35,"endColumn":53},{"ruleId":"164","severity":1,"message":"165","line":35,"column":50,"nodeType":"166","messageId":"167","endLine":35,"endColumn":53,"suggestions":"182"},{"ruleId":"175","severity":1,"message":"183","line":35,"column":55,"nodeType":"180","messageId":"181","endLine":35,"endColumn":74},{"ruleId":"164","severity":1,"message":"165","line":35,"column":71,"nodeType":"166","messageId":"167","endLine":35,"endColumn":74,"suggestions":"184"},{"ruleId":"171","severity":1,"message":"172","line":48,"column":13,"nodeType":"173","messageId":"174","endLine":48,"endColumn":26},{"ruleId":"164","severity":1,"message":"165","line":13,"column":65,"nodeType":"166","messageId":"167","endLine":13,"endColumn":68,"suggestions":"185"},{"ruleId":"164","severity":1,"message":"165","line":12,"column":17,"nodeType":"166","messageId":"167","endLine":12,"endColumn":20,"suggestions":"186"},{"ruleId":"171","severity":1,"message":"172","line":16,"column":17,"nodeType":"173","messageId":"174","endLine":16,"endColumn":30},{"ruleId":"175","severity":1,"message":"176","line":5,"column":20,"nodeType":"177","messageId":"178","endLine":5,"endColumn":42},{"ruleId":"187","severity":1,"message":"188","line":41,"column":36,"nodeType":"189","messageId":"190","endLine":41,"endColumn":45},{"ruleId":"164","severity":1,"message":"165","line":49,"column":37,"nodeType":"166","messageId":"167","endLine":49,"endColumn":40,"suggestions":"191"},{"ruleId":"164","severity":1,"message":"165","line":53,"column":35,"nodeType":"166","messageId":"167","endLine":53,"endColumn":38,"suggestions":"192"},{"ruleId":"164","severity":1,"message":"165","line":301,"column":39,"nodeType":"166","messageId":"167","endLine":301,"endColumn":42,"suggestions":"193"},{"ruleId":"164","severity":1,"message":"165","line":301,"column":52,"nodeType":"166","messageId":"167","endLine":301,"endColumn":55,"suggestions":"194"},{"ruleId":"171","severity":1,"message":"172","line":303,"column":25,"nodeType":"173","messageId":"174","endLine":303,"endColumn":36},{"ruleId":"195","severity":2,"message":"196","line":1,"column":13,"nodeType":"180","messageId":"197","endLine":1,"endColumn":17},{"ruleId":"195","severity":2,"message":"198","line":3,"column":6,"nodeType":"180","messageId":"197","endLine":3,"endColumn":14},{"ruleId":"195","severity":2,"message":"199","line":11,"column":13,"nodeType":"180","messageId":"197","endLine":11,"endColumn":20},{"ruleId":"164","severity":1,"message":"165","line":13,"column":46,"nodeType":"166","messageId":"167","endLine":13,"endColumn":49,"suggestions":"200"},{"ruleId":"164","severity":1,"message":"165","line":17,"column":35,"nodeType":"166","messageId":"167","endLine":17,"endColumn":38,"suggestions":"201"},{"ruleId":"175","severity":1,"message":"176","line":6,"column":16,"nodeType":"177","messageId":"178","endLine":6,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":10,"column":20,"nodeType":"177","messageId":"178","endLine":10,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":17,"column":16,"nodeType":"177","messageId":"178","endLine":17,"endColumn":39},{"ruleId":"175","severity":1,"message":"176","line":21,"column":16,"nodeType":"177","messageId":"178","endLine":21,"endColumn":52},{"ruleId":"175","severity":1,"message":"176","line":25,"column":13,"nodeType":"177","messageId":"178","endLine":25,"endColumn":49},{"ruleId":"175","severity":1,"message":"176","line":29,"column":16,"nodeType":"177","messageId":"178","endLine":29,"endColumn":31},{"ruleId":"202","severity":1,"message":"203","line":45,"column":17,"nodeType":"204","endLine":47,"endColumn":19},{"ruleId":"164","severity":1,"message":"165","line":47,"column":37,"nodeType":"166","messageId":"167","endLine":47,"endColumn":40,"suggestions":"205"},{"ruleId":"164","severity":1,"message":"165","line":51,"column":35,"nodeType":"166","messageId":"167","endLine":51,"endColumn":38,"suggestions":"206"},{"ruleId":"164","severity":1,"message":"165","line":320,"column":39,"nodeType":"166","messageId":"167","endLine":320,"endColumn":42,"suggestions":"207"},{"ruleId":"164","severity":1,"message":"165","line":320,"column":52,"nodeType":"166","messageId":"167","endLine":320,"endColumn":55,"suggestions":"208"},{"ruleId":"171","severity":1,"message":"172","line":322,"column":25,"nodeType":"173","messageId":"174","endLine":322,"endColumn":36},{"ruleId":"175","severity":1,"message":"176","line":6,"column":16,"nodeType":"177","messageId":"178","endLine":6,"endColumn":21},{"ruleId":"175","severity":1,"message":"176","line":10,"column":16,"nodeType":"177","messageId":"178","endLine":10,"endColumn":35},{"ruleId":"175","severity":1,"message":"176","line":14,"column":16,"nodeType":"177","messageId":"178","endLine":14,"endColumn":48},{"ruleId":"175","severity":1,"message":"176","line":18,"column":13,"nodeType":"177","messageId":"178","endLine":18,"endColumn":45},{"ruleId":"175","severity":1,"message":"176","line":22,"column":16,"nodeType":"177","messageId":"178","endLine":22,"endColumn":31},"lines-around-directive",["209"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["210","211"],["212","213"],["214","215"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","Identifier","anyTypedArg",["216","217"],"Argument 'additionalData' should be typed with a non-any type.",["218","219"],["220","221"],["222","223"],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed",["224","225"],["226","227"],["228","229"],["230","231"],"@typescript-eslint/naming-convention","Type Alias name `user` must match one of the following formats: PascalCase","doesNotMatchFormat","Type Alias name `userInfo` must match one of the following formats: PascalCase","Type Alias name `picture` must match one of the following formats: PascalCase",["232","233"],["234","235"],"react/no-danger","Dangerous property 'dangerouslySetInnerHTML' found","JSXAttribute",["236","237"],["238","239"],["240","241"],["242","243"],"padding-line-between-statements",{"messageId":"244","fix":"245","desc":"246"},{"messageId":"247","fix":"248","desc":"249"},{"messageId":"244","fix":"250","desc":"246"},{"messageId":"247","fix":"251","desc":"249"},{"messageId":"244","fix":"252","desc":"246"},{"messageId":"247","fix":"253","desc":"249"},{"messageId":"244","fix":"254","desc":"246"},{"messageId":"247","fix":"255","desc":"249"},{"messageId":"244","fix":"256","desc":"246"},{"messageId":"247","fix":"257","desc":"249"},{"messageId":"244","fix":"258","desc":"246"},{"messageId":"247","fix":"259","desc":"249"},{"messageId":"244","fix":"260","desc":"246"},{"messageId":"247","fix":"261","desc":"249"},{"messageId":"244","fix":"262","desc":"246"},{"messageId":"247","fix":"263","desc":"249"},{"messageId":"244","fix":"264","desc":"246"},{"messageId":"247","fix":"265","desc":"249"},{"messageId":"244","fix":"266","desc":"246"},{"messageId":"247","fix":"267","desc":"249"},{"messageId":"244","fix":"268","desc":"246"},{"messageId":"247","fix":"269","desc":"249"},{"messageId":"244","fix":"270","desc":"246"},{"messageId":"247","fix":"271","desc":"249"},{"messageId":"244","fix":"272","desc":"246"},{"messageId":"247","fix":"273","desc":"249"},{"messageId":"244","fix":"274","desc":"246"},{"messageId":"247","fix":"275","desc":"249"},{"messageId":"244","fix":"276","desc":"246"},{"messageId":"247","fix":"277","desc":"249"},{"messageId":"244","fix":"278","desc":"246"},{"messageId":"247","fix":"279","desc":"249"},{"messageId":"244","fix":"280","desc":"246"},{"messageId":"247","fix":"281","desc":"249"},"suggestUnknown",{"range":"282","text":"283"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"282","text":"284"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"285","text":"283"},{"range":"285","text":"284"},{"range":"286","text":"283"},{"range":"286","text":"284"},{"range":"287","text":"283"},{"range":"287","text":"284"},{"range":"288","text":"283"},{"range":"288","text":"284"},{"range":"289","text":"283"},{"range":"289","text":"284"},{"range":"290","text":"283"},{"range":"290","text":"284"},{"range":"291","text":"283"},{"range":"291","text":"284"},{"range":"292","text":"283"},{"range":"292","text":"284"},{"range":"293","text":"283"},{"range":"293","text":"284"},{"range":"294","text":"283"},{"range":"294","text":"284"},{"range":"295","text":"283"},{"range":"295","text":"284"},{"range":"296","text":"283"},{"range":"296","text":"284"},{"range":"297","text":"283"},{"range":"297","text":"284"},{"range":"298","text":"283"},{"range":"298","text":"284"},{"range":"299","text":"283"},{"range":"299","text":"284"},{"range":"300","text":"283"},{"range":"300","text":"284"},[629,632],"unknown","never",[444,447],[522,525],[1007,1010],[1028,1031],[526,529],[416,419],[1916,1919],[2022,2025],[10544,10547],[10557,10560],[471,474],[593,596],[1989,1992],[2099,2102],[11624,11627],[11637,11640]]