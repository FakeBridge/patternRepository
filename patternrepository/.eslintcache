[{"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx":"1","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx":"2","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx":"3","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx":"4","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx":"5","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx":"6","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx":"7","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx":"8","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx":"9","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx":"10","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx":"11","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx":"12","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx":"13","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx":"14","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx":"15","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx":"16","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx":"17","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx":"18","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx":"19","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx":"20","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx":"21","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx":"22","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx":"23","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx":"24","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\styledComponents.tsx":"25","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\tagProvider.tsx":"26","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\books\\addBook.tsx":"27","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\bookServices.tsx":"28","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\bookProvider.tsx":"29","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\selectStyles.tsx":"30","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\helperFunctions.tsx":"31","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternPrint.jsx":"32","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toPrint.jsx":"33","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toExport.jsx":"34","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toExport2.jsx":"35","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\usersProvider.tsx":"36","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\userServices.tsx":"37","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\likedPatternsServices.tsx":"38"},{"size":667,"mtime":1620332898047,"results":"39","hashOfConfig":"40"},{"size":275,"mtime":1618591518992,"results":"41","hashOfConfig":"40"},{"size":1405,"mtime":1618832426865,"results":"42","hashOfConfig":"40"},{"size":1421,"mtime":1618524201234,"results":"43","hashOfConfig":"40"},{"size":1808,"mtime":1618764077833,"results":"44","hashOfConfig":"40"},{"size":1545,"mtime":1618610348765,"results":"45","hashOfConfig":"40"},{"size":1535,"mtime":1618524201222,"results":"46","hashOfConfig":"40"},{"size":135,"mtime":1618332767713,"results":"47","hashOfConfig":"40"},{"size":423,"mtime":1618332668472,"results":"48","hashOfConfig":"40"},{"size":3271,"mtime":1618610348755,"results":"49","hashOfConfig":"40"},{"size":415,"mtime":1617579618712,"results":"50","hashOfConfig":"40"},{"size":1768,"mtime":1618524201223,"results":"51","hashOfConfig":"40"},{"size":4984,"mtime":1618610348762,"results":"52","hashOfConfig":"40"},{"size":3282,"mtime":1618610348762,"results":"53","hashOfConfig":"40"},{"size":1362,"mtime":1617579618712,"results":"54","hashOfConfig":"40"},{"size":3361,"mtime":1620334653507,"results":"55","hashOfConfig":"40"},{"size":15420,"mtime":1620334753125,"results":"56","hashOfConfig":"40"},{"size":196,"mtime":1617283949558,"results":"57","hashOfConfig":"40"},{"size":7265,"mtime":1620337706509,"results":"58","hashOfConfig":"40"},{"size":1106,"mtime":1620336866595,"results":"59","hashOfConfig":"40"},{"size":1037,"mtime":1618336456802,"results":"60","hashOfConfig":"40"},{"size":4526,"mtime":1620337780235,"results":"61","hashOfConfig":"40"},{"size":17057,"mtime":1620338487614,"results":"62","hashOfConfig":"40"},{"size":650,"mtime":1618763627960,"results":"63","hashOfConfig":"40"},{"size":10445,"mtime":1620338159066,"results":"64","hashOfConfig":"40"},{"size":1146,"mtime":1618761398340,"results":"65","hashOfConfig":"40"},{"size":2668,"mtime":1618610348757,"results":"66","hashOfConfig":"40"},{"size":1005,"mtime":1618610348767,"results":"67","hashOfConfig":"40"},{"size":1319,"mtime":1618610348766,"results":"68","hashOfConfig":"40"},{"size":227,"mtime":1618610348763,"results":"69","hashOfConfig":"40"},{"size":279,"mtime":1618610348766,"results":"70","hashOfConfig":"40"},{"size":1175,"mtime":1618688616561,"results":"71","hashOfConfig":"40"},{"size":2586,"mtime":1618688616563,"results":"72","hashOfConfig":"40"},{"size":2458,"mtime":1618685794822,"results":"73","hashOfConfig":"40"},{"size":1653,"mtime":1618688616563,"results":"74","hashOfConfig":"40"},{"size":1190,"mtime":1620332271593,"results":"75","hashOfConfig":"40"},{"size":216,"mtime":1620332014589,"results":"76","hashOfConfig":"40"},{"size":371,"mtime":1620336599823,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g8f8c4",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"82"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"157"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"157"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"82"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"82"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx",[],["174","175","176","177","178"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx",["179"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\nimport { user } from '../types';\r\n\r\nexport const UserContext = createContext<{ user: user }>({\r\n    user: null,\r\n});\r\n\r\ninterface PropsType {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst UserProvider: React.FC<PropsType> = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState<{ user: user }>({\r\n        user: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                const signedUser: any = await generateUserDocument(userAuth, null);\r\n                setCurrentUser({\r\n                    user: {\r\n                        uid: signedUser?.uid,\r\n                        email: signedUser?.email,\r\n                        username: signedUser?.username,\r\n                        avatar: signedUser?.avatar,\r\n                        description: signedUser?.description,\r\n                        darkTheme: signedUser?.darkTheme,\r\n                    },\r\n                });\r\n            } else {\r\n                setCurrentUser({ user: null });\r\n            }\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    return <UserContext.Provider value={currentUser}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport default UserProvider;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx",["180"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { auth } from '../logic/firebase';\r\n\r\nimport { UserContext } from '../logic/providers/userProvider';\r\n\r\nimport { PageHeader as PH, HeaderName, Navigation, NavItem } from '../design/styledComponents';\r\n\r\nconst PageHeader: React.FC = () => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const logOutHandler = (event: any) => {\r\n        event.preventDefault();\r\n        auth.signOut();\r\n    };\r\n\r\n    return (\r\n        <PH>\r\n            <HeaderName>\r\n                <Link to=\"/home\">patternRepository</Link>\r\n            </HeaderName>\r\n            <Navigation>\r\n                <NavItem>\r\n                    <Link to=\"/home\">Home</Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <Link to=\"/patterns\">Browse patterns</Link>\r\n                </NavItem>\r\n                <NavItem style={{ float: 'right' }}>\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                        <DropdownToggle nav caret>\r\n                            {`Welcome ${user?.username}`}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                            <DropdownItem>\r\n                                <Link to={`/profile/${user?.uid}`}>Profile</Link>\r\n                            </DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem onClick={logOutHandler}>Log out</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                </NavItem>\r\n            </Navigation>\r\n        </PH>\r\n    );\r\n};\r\n\r\nexport default PageHeader;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx",["181","182","183","184","185","186","187","188"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n} else {\r\n    firebase.app(); // if already initialized, use that one\r\n}\r\n\r\n// firebase.initializeApp();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        // const userAvatar = await storage.ref(`/avatars/${uid}`)?.getDownloadURL();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n            avatar: null, // userAvatar,\r\n        };\r\n    } catch (error) {\r\n        console.error(error.code);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const generateUserDocument = async (user: any, additionalData: any) => {\r\n    if (!user) return {};\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email } = user;\r\n        try {\r\n            await userRef.set({\r\n                username: user.username,\r\n                email,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx",["189"],"import React, { useState } from 'react';\r\nimport { auth, generateUserDocument } from '../../logic/firebase';\r\n\r\nimport { isEmail } from '../../logic/helperFunctions';\r\n\r\nimport {\r\n    SuccessButton,\r\n    Input,\r\n    Label,\r\n    FormGroup,\r\n    DangerAlert,\r\n    HelperText,\r\n} from '../../design/styledComponents';\r\n\r\nconst SignUp: React.FC = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordRepeat, setPasswordRepeat] = useState('');\r\n\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const createUserWithEmailAndPasswordHandler = async (event: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n            generateUserDocument(user, { username });\r\n        } catch (errorData) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordRepeat('');\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormGroup>\r\n                <Label>Username</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <HelperText>You can change your username later ^^</HelperText>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>E-mail</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter mail\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                        if (!isEmail(e.target.value)) {\r\n                            setError('This is not a valid email!');\r\n                        } else {\r\n                            setError(null);\r\n                        }\r\n                        setEmail(e.target.value);\r\n                    }}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <HelperText>Password has to have at least six characters</HelperText>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Repeat password</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Repeat password\"\r\n                    value={passwordRepeat}\r\n                    type=\"password\"\r\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\r\n                />\r\n            </FormGroup>\r\n\r\n            {error && <DangerAlert>{error}</DangerAlert>}\r\n            <SuccessButton block onClick={createUserWithEmailAndPasswordHandler}>\r\n                Sign up\r\n            </SuccessButton>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx",["190","191"],"import React, { useState, useCallback } from 'react';\r\nimport { auth } from '../../logic/firebase';\r\n\r\nimport { SuccessButton, Input, Label, FormGroup, DangerAlert } from '../../design/styledComponents';\r\n\r\nconst SignIn: React.FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const signInWithEmailAndPasswordHandler = useCallback(\r\n        (event: any) => {\r\n            event.preventDefault();\r\n            auth.signInWithEmailAndPassword(email, password).catch((errorData) => {\r\n                setError('Error signing in with password and email!');\r\n                console.error('Error signing in with password and email', errorData);\r\n            });\r\n        },\r\n        [email, password],\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <FormGroup>\r\n                <Label>E-mail</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </FormGroup>\r\n            {error && <DangerAlert>{error}</DangerAlert>}\r\n            <SuccessButton block onClick={signInWithEmailAndPasswordHandler}>\r\n                Sign in\r\n            </SuccessButton>\r\n        </>\r\n    );\r\n};\r\nexport default SignIn;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx",["192","193"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport { UserContext } from '../../logic/providers/userProvider';\r\n\r\nimport useStorage from '../../logic/hooks/useStorage';\r\n\r\nimport { firestore } from '../../logic/firebase';\r\n\r\nimport {\r\n    Main,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    MarginItemDetail,\r\n    ButtonRow,\r\n    SuccessButton,\r\n    CancelButton,\r\n    DangerAlert,\r\n    SuccessAlert,\r\n} from '../../design/styledComponents';\r\n\r\ninterface PropsType {\r\n    openEdit: (open: boolean) => void;\r\n}\r\n\r\nconst ProfileEdit: React.FC<PropsType> = ({ openEdit }) => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [saved, setSaved] = useState<boolean>(false);\r\n\r\n    const types = ['image/png', 'image/jpeg', 'image/jpg'];\r\n\r\n    useEffect(() => {\r\n        let name = '';\r\n        let descriptionText = '';\r\n        if (user && user.username) {\r\n            name = user.username;\r\n        }\r\n        if (user && user.description) {\r\n            descriptionText = user.description;\r\n        }\r\n        setUsername(name);\r\n        setDescription(descriptionText);\r\n    }, [user]);\r\n\r\n    const { progress, url, uploadImage } = useStorage(file);\r\n\r\n    const handleImageChange = (selectedFile: File | null) => {\r\n        if (selectedFile) {\r\n            if (types.includes(selectedFile.type)) {\r\n                const maxAllowSize = 5 * 1024 * 1024;\r\n                if (selectedFile.size > maxAllowSize) {\r\n                    setError('Image is too big! Maximum size is 5MB.');\r\n                } else {\r\n                    setError(null);\r\n                    setFile(selectedFile);\r\n                }\r\n            } else {\r\n                setFile(null);\r\n                setError('Please use only select an image file (png or jpg)');\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateData = () => {\r\n        firestore\r\n            .collection(`users`)\r\n            .doc(`${user?.uid}`)\r\n            .update({\r\n                username,\r\n                description,\r\n            })\r\n            .then(() => {\r\n                setSaved(true);\r\n            })\r\n            .catch((errorData) => {\r\n                setError(errorData?.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Main>\r\n            <MarginItemDetail>\r\n                <ButtonRow>\r\n                    <CancelButton onClick={() => openEdit(false)} block={false}>\r\n                        Close\r\n                    </CancelButton>\r\n\r\n                    <SuccessButton onClick={() => updateData()} block={false}>\r\n                        Save\r\n                    </SuccessButton>\r\n                </ButtonRow>\r\n\r\n                {saved && <SuccessAlert>Your changes were saved!</SuccessAlert>}\r\n\r\n                {error && <DangerAlert>{error}</DangerAlert>}\r\n\r\n                <FormGroup>\r\n                    <Label>Profile picture</Label>\r\n                    {url && (\r\n                        <img\r\n                            style={{ width: '100px', height: '100px', objectFit: 'cover' }}\r\n                            src={url}\r\n                            alt=\"\"\r\n                        />\r\n                    )}\r\n                    <Input\r\n                        block\r\n                        type=\"file\"\r\n                        onChange={(e) =>\r\n                            handleImageChange(e?.target?.files ? e?.target?.files[0] : null)\r\n                        }\r\n                    />\r\n                    {file && (\r\n                        <SuccessButton\r\n                            block={false}\r\n                            onClick={() => uploadImage('avatars', user?.uid ? user.uid : '')}\r\n                        >\r\n                            Save image{' '}\r\n                        </SuccessButton>\r\n                    )}\r\n                    {file && progress > 0 && progress < 100 && <p>{`${progress}% uploaded`}</p>}\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>Username</Label>\r\n                    <Input block value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>{`Something about you <3`}</Label>\r\n                    <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={description}\r\n                        onChange={(event: any, editor: any) => {\r\n                            setDescription(editor.getData());\r\n                        }}\r\n                    />\r\n                </FormGroup>\r\n            </MarginItemDetail>\r\n        </Main>\r\n    );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx",["194"],"import { useState } from 'react';\r\n\r\nimport { storage } from '../firebase';\r\n\r\nconst useStorage = (file: File | null) => {\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [url, setUrl] = useState<string | null>(null);\r\n\r\n    // runs every time the file value changes\r\n    const uploadImage = (storageName: string, pictureName: string) => {\r\n        if (file) {\r\n            // storage ref\r\n            const storageRef = storage.ref(`${storageName}/${pictureName}`);\r\n\r\n            storageRef.put(file).on(\r\n                'state_changed',\r\n                (snap) => {\r\n                    // track the upload progress\r\n                    const percentage = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\r\n                    setProgress(percentage);\r\n                },\r\n                (err) => {\r\n                    setError(err.message);\r\n                },\r\n                async () => {\r\n                    // get the public download img url\r\n                    const downloadUrl = await storageRef.getDownloadURL();\r\n\r\n                    // save the url to local state\r\n                    setUrl(downloadUrl);\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    return { progress, url, error, uploadImage };\r\n};\r\nexport default useStorage;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx",["195","196","197"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx",["198","199","200"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx",["201","202","203"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx",["204","205","206","207","208","209","210","211"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx",["212","213","214"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx",["215","216","217","218","219"],"import { firestore } from '../firebase';\nimport { tagToAdd } from '../types';\n\nconst collectionRef = firestore.collection('/tags');\n\nconst getAll = () => {\n    return collectionRef;\n};\n\nconst create = (data: tagToAdd) => {\n    return collectionRef.add(data);\n};\n\nconst update = (id: string, value: tagToAdd) => {\n    return collectionRef.doc(id).update(value);\n};\n\nconst set = (id: string, value: tagToAdd) => {\n    return collectionRef.doc(id).set(value);\n};\n\nconst remove = (id: string) => {\n    return collectionRef.doc(id).delete();\n};\n\nconst TagService = {\n    getAll,\n    set,\n    create,\n    update,\n    remove,\n};\n\nexport default TagService;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\styledComponents.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\tagProvider.tsx",["220","221"],"import React, { createContext, useState, useEffect } from 'react';\nimport TagService from '../services/tagServices';\nimport { tag } from '../types';\n\nexport const TagContext = createContext<{ allTags: tag[] }>({ allTags: [] });\n\ninterface PropsType {\n    children: JSX.Element;\n}\n\nconst TagProvider: React.FC<PropsType> = ({ children }) => {\n    const [allTags, setAllTags] = useState<{ allTags: tag[] }>({ allTags: [] });\n\n    const onTagDataChange = (items: any) => {\n        let loadedTags: tag[] = [];\n        loadedTags = [];\n\n        items.docs.forEach((item: any) => {\n            const { id: tagId } = item;\n            const data = item.data();\n\n            loadedTags.push({\n                id: tagId,\n                label: data.label,\n                value: tagId,\n            });\n        });\n\n        setAllTags({ allTags: loadedTags });\n    };\n\n    useEffect(() => {\n        const unsubscribe = TagService.getAll().orderBy('label', 'asc').onSnapshot(onTagDataChange);\n\n        return () => unsubscribe();\n    }, []);\n\n    return <TagContext.Provider value={allTags}>{children}</TagContext.Provider>;\n};\n\nexport default TagProvider;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\books\\addBook.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\bookServices.tsx",["222","223","224","225","226","227","228"],"import { firestore, auth } from '../firebase';\r\nimport { bookInfo } from '../types';\r\n\r\nconst collectionRef = firestore.collection('/book');\r\n\r\nconst getAll = () => {\r\n    return collectionRef;\r\n};\r\n\r\nconst getAllMine = () => {\r\n    if (auth?.currentUser?.uid) {\r\n        return collectionRef.where('owner', '==', auth.currentUser.uid);\r\n    }\r\n    return collectionRef;\r\n};\r\n\r\nconst getAllOfUser = (uid: string) => {\r\n    return collectionRef.where('owner', '==', uid);\r\n};\r\n\r\nconst create = (data: bookInfo) => {\r\n    return collectionRef.add(data);\r\n};\r\n\r\nconst update = (id: string, value: bookInfo) => {\r\n    return collectionRef.doc(id).update(value);\r\n};\r\n\r\nconst set = (id: string, value: bookInfo) => {\r\n    return collectionRef.doc(id).set(value);\r\n};\r\n\r\nconst remove = (id: string) => {\r\n    return collectionRef.doc(id).delete();\r\n};\r\n\r\nconst BookService = {\r\n    getAll,\r\n    getAllMine,\r\n    getAllOfUser,\r\n    set,\r\n    create,\r\n    update,\r\n    remove,\r\n};\r\n\r\nexport default BookService;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\bookProvider.tsx",["229","230"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport BookService from '../services/bookServices';\r\nimport { book } from '../types';\r\n\r\nexport const BookContext = createContext<{ allBooks: book[] }>({ allBooks: [] });\r\n\r\ninterface PropsType {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst BookProvider: React.FC<PropsType> = ({ children }) => {\r\n    const [allBooks, setAllBooks] = useState<{ allBooks: book[] }>({ allBooks: [] });\r\n\r\n    const onBookDataChange = (items: any) => {\r\n        let loadedBooks: book[] = [];\r\n        loadedBooks = [];\r\n\r\n        items.docs.forEach((item: any) => {\r\n            const { id: bookId } = item;\r\n            const data = item.data();\r\n\r\n            loadedBooks.push({\r\n                id: bookId,\r\n                label: data.label,\r\n                value: bookId,\r\n                colour: data.colour,\r\n                owner: data.owner,\r\n            });\r\n        });\r\n\r\n        setAllBooks({ allBooks: loadedBooks });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = BookService.getAll()\r\n            .orderBy('label', 'asc')\r\n            .onSnapshot(onBookDataChange);\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return <BookContext.Provider value={allBooks}>{children}</BookContext.Provider>;\r\n};\r\n\r\nexport default BookProvider;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\selectStyles.tsx",["231","232","233","234","235"],"export default {\r\n    multiValue: (provided: any, state: any) => {\r\n        const backgroundColor = `${state.data.colour}88`;\r\n\r\n        return {\r\n            ...provided,\r\n            backgroundColor,\r\n        };\r\n    },\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\helperFunctions.tsx",["236","237"],"export const isEmail = (email: string) =>\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email,\r\n    );\r\n\r\nexport const hi = () => {\r\n    return 'Hi';\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternPrint.jsx",["238","239"],"import React from 'react';\r\nimport ReactToPrint from 'react-to-print';\r\nimport {\r\n  FontAwesomeIcon\r\n} from '@fortawesome/react-fontawesome';\r\nimport ComponentToPrint from './toPrint';\r\n\r\nimport {\r\n  InvisibleIconButton,\r\n} from '../../design/styledComponents';\r\n\r\nclass Example extends React.PureComponent {\r\n  constructor( props ) {\r\n    super( props );\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReactToPrint\r\n          trigger={() => {\r\n            // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\r\n            // to the root node of the returned component as it will be overwritten.\r\n            return <InvisibleIconButton type=\"button\">\r\n                <FontAwesomeIcon icon={['fa', 'print']} /></InvisibleIconButton>;\r\n          }}\r\n          content={() => this.componentRef}\r\n        />\r\n        <div style={{display: \"none\"}}>\r\n          <ComponentToPrint ref={el => (this.componentRef = el)} {...this.props}/> { /* eslint-disable-line no-return-assign */ } { /* eslint-disable-line react/jsx-props-no-spreading */ }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Example;",["240","241","242","243","244"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toPrint.jsx",["245","246"],"import React from 'react';\r\n\r\nimport {\r\n  ItemHeader,\r\n  ItemLabel,\r\n  Difficulty,\r\n  Tag,\r\n  Description,\r\n  TagRow,\r\n} from '../../design/styledComponents';\r\n\r\nexport default class ComponentToPrint extends React.PureComponent {\r\n  constructor( props ) {\r\n    super( props );\r\n    this.state = {};\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      pattern\r\n    } = this.props;\r\n    const {\r\n      title,\r\n      tags,\r\n      difficulty,\r\n      books,\r\n      description,\r\n      patternImages,\r\n      finishedWorkImages\r\n    } = pattern;\r\n    return (\r\n      <div style={{padding: \"100px\"}}>\r\n        <ItemHeader>{title?.length > 0 ? title : 'Untitled'}</ItemHeader>\r\n\r\n          <TagRow>\r\n              {tags.map((tag) => (\r\n                  <Tag key={tag.id} colour=\"tag\">\r\n                      {' '}\r\n                      {tag.label}{' '}\r\n                  </Tag>\r\n              ))}\r\n          </TagRow>\r\n\r\n          <Difficulty difficulty={difficulty} />\r\n\r\n          <ItemLabel>Books</ItemLabel>\r\n          <TagRow>\r\n              {books?.map((book) => (\r\n                  <Tag key={book.id} colour={book.colour}>\r\n                      {' '}\r\n                      {book.label}{' '}\r\n                  </Tag>\r\n              ))}\r\n          </TagRow>\r\n\r\n          <ItemLabel>Description</ItemLabel>\r\n          <Description\r\n              dangerouslySetInnerHTML={{\r\n                  __html: description,\r\n              }}\r\n          />\r\n\r\n        <div style={{display: \"block\", pageBreakBefore: \"always\", paddingTop: \"100px\"}}>\r\n        <ItemLabel>Finished Works</ItemLabel>\r\n        <div>\r\n              {finishedWorkImages.map((picture) => (\r\n                <div key={picture.name} style={{display: \"inline\"}}>\r\n                  <img\r\n                      key={picture.name}\r\n                      src={picture.url}\r\n                      alt={picture.name}\r\n                      width=\"50%\"\r\n                      style={{display: \"inline\"}}\r\n                  />\r\n              </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n              <div>\r\n                {patternImages.map((picture) => (\r\n                  <div key={picture.name} style={{height: \"100%\", paddingTop: \"100px\"}}>\r\n                  <img\r\n                    key={picture.name}\r\n                    src={picture.url}\r\n                    alt={picture.name}\r\n                    width=\"100%\"\r\n                    style={{display: \"block\", pageBreakBefore: \"auto\"}}\r\n                    />\r\n                </div>\r\n                ))}\r\n              </div>\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toExport.jsx",["247","248"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toExport2.jsx",["249","250"],"import React from 'react';\r\nimport {\r\n  Text,\r\n  Page,\r\n  Document,\r\n  View,\r\n  StyleSheet\r\n} from '@react-pdf/renderer';\r\n\r\nconst styles = StyleSheet.create( {\r\n  page: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#FFF',\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    display: 'block',\r\n  }\r\n} );\r\n\r\nexport default class ComponentToExport extends React.PureComponent {\r\n  constructor( props ) {\r\n    super( props );\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      pattern\r\n    } = this.props;\r\n    const {\r\n      title,\r\n      tags,\r\n      difficulty,\r\n      books,\r\n      description,\r\n    } = pattern;\r\n    return (\r\n      <Document>\r\n        <Page size=\"A4\" style={styles.page}>\r\n          <View  style={styles.section}>\r\n            <Text>{title?.length > 0 ? title : 'Untitled'}</Text>\r\n              {tags.map((tag) => (\r\n                  <Text key={tag.id}>\r\n                      {' '}\r\n                      {tag.label}{' '}\r\n                  </Text>\r\n              ))}\r\n          </View>\r\n\r\n                      <View style={styles.section}>\r\n          <Text>{`Difficulty: ${difficulty}`}</Text>\r\n            </View>\r\n\r\n            <View style={styles.section}>\r\n                {books?.map((book) => (\r\n                    <Text key={book.id} colour={book.colour}>\r\n                        {' '}\r\n                        {book.label}{' '}\r\n                    </Text>\r\n                ))}\r\n            </View>\r\n\r\n            <View style={styles.section}>\r\n            <Text>Description</Text>\r\n            <Text>{description}</Text>\r\n        </View>\r\n\r\n        </Page>\r\n      </Document>\r\n    );\r\n  }\r\n}","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\usersProvider.tsx",["251","252"],"import React, { createContext, useState, useEffect } from 'react';\nimport UserService from '../services/userServices';\nimport { basicUser } from '../types';\n\nexport const UsersContext = createContext<{ allUsers: basicUser[] }>({ allUsers: [] });\n\ninterface PropsType {\n    children: JSX.Element;\n}\n\nconst UsersProvider: React.FC<PropsType> = ({ children }) => {\n    const [allUsers, setAllUsers] = useState<{ allUsers: basicUser[] }>({ allUsers: [] });\n\n    const onUserDataChange = (items: any) => {\n        let loadedUsers: basicUser[] = [];\n        loadedUsers = [];\n\n        items.docs.forEach((item: any) => {\n            const { id: userId } = item;\n            const data = item.data();\n\n            loadedUsers.push({\n                uid: userId,\n                username: data.username,\n                avatar: data.avatar,\n            });\n        });\n\n        setAllUsers({ allUsers: loadedUsers });\n    };\n\n    useEffect(() => {\n        const unsubscribe = UserService.getAll().onSnapshot(onUserDataChange);\n\n        return () => unsubscribe();\n    }, []);\n\n    return <UsersContext.Provider value={allUsers}>{children}</UsersContext.Provider>;\n};\n\nexport default UsersProvider;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\userServices.tsx",["253"],"import { firestore } from '../firebase';\n\nconst collectionRef = firestore.collection('/users');\n\nconst getAll = () => {\n    return collectionRef;\n};\n\nconst UserService = {\n    getAll,\n};\n\nexport default UserService;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\likedPatternsServices.tsx",["254","255"],{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":21,"column":35,"nodeType":"268","messageId":"269","endLine":21,"endColumn":38,"suggestions":"270"},{"ruleId":"266","severity":1,"message":"267","line":13,"column":35,"nodeType":"268","messageId":"269","endLine":13,"endColumn":38,"suggestions":"271"},{"ruleId":"266","severity":1,"message":"267","line":19,"column":37,"nodeType":"268","messageId":"269","endLine":19,"endColumn":40,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":30,"column":9,"nodeType":"275","messageId":"276","endLine":30,"endColumn":22},{"ruleId":"277","severity":1,"message":"278","line":35,"column":37,"nodeType":"279","messageId":"280","endLine":35,"endColumn":78},{"ruleId":"277","severity":1,"message":"281","line":35,"column":44,"nodeType":"282","messageId":"283","endLine":35,"endColumn":53},{"ruleId":"266","severity":1,"message":"267","line":35,"column":50,"nodeType":"268","messageId":"269","endLine":35,"endColumn":53,"suggestions":"284"},{"ruleId":"277","severity":1,"message":"285","line":35,"column":55,"nodeType":"282","messageId":"283","endLine":35,"endColumn":74},{"ruleId":"266","severity":1,"message":"267","line":35,"column":71,"nodeType":"268","messageId":"269","endLine":35,"endColumn":74,"suggestions":"286"},{"ruleId":"273","severity":1,"message":"274","line":48,"column":13,"nodeType":"275","messageId":"276","endLine":48,"endColumn":26},{"ruleId":"266","severity":1,"message":"267","line":23,"column":65,"nodeType":"268","messageId":"269","endLine":23,"endColumn":68,"suggestions":"287"},{"ruleId":"266","severity":1,"message":"267","line":13,"column":17,"nodeType":"268","messageId":"269","endLine":13,"endColumn":20,"suggestions":"288"},{"ruleId":"273","severity":1,"message":"274","line":17,"column":17,"nodeType":"275","messageId":"276","endLine":17,"endColumn":30},{"ruleId":"266","severity":1,"message":"267","line":141,"column":43,"nodeType":"268","messageId":"269","endLine":141,"endColumn":46,"suggestions":"289"},{"ruleId":"266","severity":1,"message":"267","line":141,"column":56,"nodeType":"268","messageId":"269","endLine":141,"endColumn":59,"suggestions":"290"},{"ruleId":"277","severity":1,"message":"278","line":5,"column":20,"nodeType":"279","messageId":"280","endLine":5,"endColumn":42},{"ruleId":"291","severity":1,"message":"292","line":72,"column":36,"nodeType":"293","messageId":"294","endLine":72,"endColumn":45},{"ruleId":"266","severity":1,"message":"267","line":367,"column":39,"nodeType":"268","messageId":"269","endLine":367,"endColumn":42,"suggestions":"295"},{"ruleId":"266","severity":1,"message":"267","line":367,"column":52,"nodeType":"268","messageId":"269","endLine":367,"endColumn":55,"suggestions":"296"},{"ruleId":"297","severity":2,"message":"298","line":1,"column":13,"nodeType":"282","messageId":"299","endLine":1,"endColumn":17},{"ruleId":"297","severity":2,"message":"300","line":3,"column":6,"nodeType":"282","messageId":"299","endLine":3,"endColumn":14},{"ruleId":"297","severity":2,"message":"301","line":11,"column":13,"nodeType":"282","messageId":"299","endLine":11,"endColumn":20},{"ruleId":"266","severity":1,"message":"267","line":42,"column":17,"nodeType":"268","messageId":"269","endLine":42,"endColumn":20,"suggestions":"302"},{"ruleId":"266","severity":1,"message":"267","line":46,"column":39,"nodeType":"268","messageId":"269","endLine":46,"endColumn":42,"suggestions":"303"},{"ruleId":"266","severity":1,"message":"267","line":75,"column":51,"nodeType":"268","messageId":"269","endLine":75,"endColumn":54,"suggestions":"304"},{"ruleId":"277","severity":1,"message":"278","line":6,"column":16,"nodeType":"279","messageId":"280","endLine":6,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":10,"column":20,"nodeType":"279","messageId":"280","endLine":10,"endColumn":25},{"ruleId":"277","severity":1,"message":"278","line":17,"column":22,"nodeType":"279","messageId":"280","endLine":17,"endColumn":38},{"ruleId":"277","severity":1,"message":"278","line":21,"column":16,"nodeType":"279","messageId":"280","endLine":21,"endColumn":39},{"ruleId":"277","severity":1,"message":"278","line":25,"column":16,"nodeType":"279","messageId":"280","endLine":25,"endColumn":52},{"ruleId":"277","severity":1,"message":"278","line":29,"column":13,"nodeType":"279","messageId":"280","endLine":29,"endColumn":49},{"ruleId":"277","severity":1,"message":"278","line":33,"column":21,"nodeType":"279","messageId":"280","endLine":33,"endColumn":51},{"ruleId":"277","severity":1,"message":"278","line":37,"column":16,"nodeType":"279","messageId":"280","endLine":37,"endColumn":31},{"ruleId":"305","severity":1,"message":"306","line":301,"column":13,"nodeType":"307","messageId":"276","endLine":301,"endColumn":76},{"ruleId":"266","severity":1,"message":"267","line":383,"column":39,"nodeType":"268","messageId":"269","endLine":383,"endColumn":42,"suggestions":"308"},{"ruleId":"266","severity":1,"message":"267","line":383,"column":52,"nodeType":"268","messageId":"269","endLine":383,"endColumn":55,"suggestions":"309"},{"ruleId":"277","severity":1,"message":"278","line":6,"column":16,"nodeType":"279","messageId":"280","endLine":6,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":10,"column":16,"nodeType":"279","messageId":"280","endLine":10,"endColumn":35},{"ruleId":"277","severity":1,"message":"278","line":14,"column":16,"nodeType":"279","messageId":"280","endLine":14,"endColumn":48},{"ruleId":"277","severity":1,"message":"278","line":18,"column":13,"nodeType":"279","messageId":"280","endLine":18,"endColumn":45},{"ruleId":"277","severity":1,"message":"278","line":22,"column":16,"nodeType":"279","messageId":"280","endLine":22,"endColumn":31},{"ruleId":"266","severity":1,"message":"267","line":14,"column":37,"nodeType":"268","messageId":"269","endLine":14,"endColumn":40,"suggestions":"310"},{"ruleId":"266","severity":1,"message":"267","line":18,"column":35,"nodeType":"268","messageId":"269","endLine":18,"endColumn":38,"suggestions":"311"},{"ruleId":"277","severity":1,"message":"278","line":6,"column":16,"nodeType":"279","messageId":"280","endLine":6,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":10,"column":20,"nodeType":"279","messageId":"280","endLine":10,"endColumn":25},{"ruleId":"277","severity":1,"message":"278","line":17,"column":22,"nodeType":"279","messageId":"280","endLine":17,"endColumn":38},{"ruleId":"277","severity":1,"message":"278","line":21,"column":16,"nodeType":"279","messageId":"280","endLine":21,"endColumn":35},{"ruleId":"277","severity":1,"message":"278","line":25,"column":16,"nodeType":"279","messageId":"280","endLine":25,"endColumn":48},{"ruleId":"277","severity":1,"message":"278","line":29,"column":13,"nodeType":"279","messageId":"280","endLine":29,"endColumn":45},{"ruleId":"277","severity":1,"message":"278","line":33,"column":16,"nodeType":"279","messageId":"280","endLine":33,"endColumn":31},{"ruleId":"266","severity":1,"message":"267","line":14,"column":38,"nodeType":"268","messageId":"269","endLine":14,"endColumn":41,"suggestions":"312"},{"ruleId":"266","severity":1,"message":"267","line":18,"column":35,"nodeType":"268","messageId":"269","endLine":18,"endColumn":38,"suggestions":"313"},{"ruleId":"277","severity":1,"message":"278","line":2,"column":17,"nodeType":"279","messageId":"280","endLine":2,"endColumn":47},{"ruleId":"277","severity":1,"message":"314","line":2,"column":18,"nodeType":"282","messageId":"283","endLine":2,"endColumn":31},{"ruleId":"266","severity":1,"message":"267","line":2,"column":28,"nodeType":"268","messageId":"269","endLine":2,"endColumn":31,"suggestions":"315"},{"ruleId":"277","severity":1,"message":"316","line":2,"column":33,"nodeType":"282","messageId":"283","endLine":2,"endColumn":43},{"ruleId":"266","severity":1,"message":"267","line":2,"column":40,"nodeType":"268","messageId":"269","endLine":2,"endColumn":43,"suggestions":"317"},{"ruleId":"277","severity":1,"message":"278","line":1,"column":24,"nodeType":"279","messageId":"280","endLine":1,"endColumn":42},{"ruleId":"277","severity":1,"message":"278","line":6,"column":19,"nodeType":"279","messageId":"280","endLine":6,"endColumn":24},{"ruleId":"277","severity":1,"message":"318","line":13,"column":16,"nodeType":"282","messageId":"319","endLine":13,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":18,"column":3,"nodeType":"293","messageId":"280","endLine":18,"endColumn":11},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","replacedBy":"265"},{"ruleId":"277","severity":1,"message":"318","line":13,"column":16,"nodeType":"282","messageId":"319","endLine":13,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":19,"column":3,"nodeType":"293","messageId":"280","endLine":19,"endColumn":11},{"ruleId":"277","severity":1,"message":"318","line":24,"column":16,"nodeType":"282","messageId":"319","endLine":24,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":29,"column":3,"nodeType":"293","messageId":"280","endLine":29,"endColumn":11},{"ruleId":"277","severity":1,"message":"318","line":23,"column":16,"nodeType":"282","messageId":"319","endLine":23,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":28,"column":3,"nodeType":"293","messageId":"280","endLine":28,"endColumn":11},{"ruleId":"266","severity":1,"message":"267","line":14,"column":38,"nodeType":"268","messageId":"269","endLine":14,"endColumn":41,"suggestions":"320"},{"ruleId":"266","severity":1,"message":"267","line":18,"column":35,"nodeType":"268","messageId":"269","endLine":18,"endColumn":38,"suggestions":"321"},{"ruleId":"277","severity":1,"message":"278","line":5,"column":16,"nodeType":"279","messageId":"280","endLine":5,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":5,"column":16,"nodeType":"279","messageId":"280","endLine":5,"endColumn":21},{"ruleId":"277","severity":1,"message":"278","line":9,"column":18,"nodeType":"279","messageId":"280","endLine":9,"endColumn":50},"lines-around-directive",["322"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["323","324"],["325","326"],["327","328"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","Identifier","anyTypedArg",["329","330"],"Argument 'additionalData' should be typed with a non-any type.",["331","332"],["333","334"],["335","336"],["337","338"],["339","340"],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed",["341","342"],["343","344"],"@typescript-eslint/naming-convention","Type Alias name `user` must match one of the following formats: PascalCase","doesNotMatchFormat","Type Alias name `userInfo` must match one of the following formats: PascalCase","Type Alias name `picture` must match one of the following formats: PascalCase",["345","346"],["347","348"],["349","350"],"no-alert","Unexpected confirm.","CallExpression",["351","352"],["353","354"],["355","356"],["357","358"],["359","360"],["361","362"],"Argument 'provided' should be typed with a non-any type.",["363","364"],"Argument 'state' should be typed with a non-any type.",["365","366"],"Argument 'props' should be typed.","missingArgType",["367","368"],["369","370"],"padding-line-between-statements",{"messageId":"371","fix":"372","desc":"373"},{"messageId":"374","fix":"375","desc":"376"},{"messageId":"371","fix":"377","desc":"373"},{"messageId":"374","fix":"378","desc":"376"},{"messageId":"371","fix":"379","desc":"373"},{"messageId":"374","fix":"380","desc":"376"},{"messageId":"371","fix":"381","desc":"373"},{"messageId":"374","fix":"382","desc":"376"},{"messageId":"371","fix":"383","desc":"373"},{"messageId":"374","fix":"384","desc":"376"},{"messageId":"371","fix":"385","desc":"373"},{"messageId":"374","fix":"386","desc":"376"},{"messageId":"371","fix":"387","desc":"373"},{"messageId":"374","fix":"388","desc":"376"},{"messageId":"371","fix":"389","desc":"373"},{"messageId":"374","fix":"390","desc":"376"},{"messageId":"371","fix":"391","desc":"373"},{"messageId":"374","fix":"392","desc":"376"},{"messageId":"371","fix":"393","desc":"373"},{"messageId":"374","fix":"394","desc":"376"},{"messageId":"371","fix":"395","desc":"373"},{"messageId":"374","fix":"396","desc":"376"},{"messageId":"371","fix":"397","desc":"373"},{"messageId":"374","fix":"398","desc":"376"},{"messageId":"371","fix":"399","desc":"373"},{"messageId":"374","fix":"400","desc":"376"},{"messageId":"371","fix":"401","desc":"373"},{"messageId":"374","fix":"402","desc":"376"},{"messageId":"371","fix":"403","desc":"373"},{"messageId":"374","fix":"404","desc":"376"},{"messageId":"371","fix":"405","desc":"373"},{"messageId":"374","fix":"406","desc":"376"},{"messageId":"371","fix":"407","desc":"373"},{"messageId":"374","fix":"408","desc":"376"},{"messageId":"371","fix":"409","desc":"373"},{"messageId":"374","fix":"410","desc":"376"},{"messageId":"371","fix":"411","desc":"373"},{"messageId":"374","fix":"412","desc":"376"},{"messageId":"371","fix":"413","desc":"373"},{"messageId":"374","fix":"414","desc":"376"},{"messageId":"371","fix":"415","desc":"373"},{"messageId":"374","fix":"416","desc":"376"},{"messageId":"371","fix":"417","desc":"373"},{"messageId":"374","fix":"418","desc":"376"},{"messageId":"371","fix":"419","desc":"373"},{"messageId":"374","fix":"420","desc":"376"},{"messageId":"371","fix":"421","desc":"373"},{"messageId":"374","fix":"422","desc":"376"},"suggestUnknown",{"range":"423","text":"424"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"423","text":"425"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"426","text":"424"},{"range":"426","text":"425"},{"range":"427","text":"424"},{"range":"427","text":"425"},{"range":"428","text":"424"},{"range":"428","text":"425"},{"range":"429","text":"424"},{"range":"429","text":"425"},{"range":"430","text":"424"},{"range":"430","text":"425"},{"range":"431","text":"424"},{"range":"431","text":"425"},{"range":"432","text":"424"},{"range":"432","text":"425"},{"range":"433","text":"424"},{"range":"433","text":"425"},{"range":"434","text":"424"},{"range":"434","text":"425"},{"range":"435","text":"424"},{"range":"435","text":"425"},{"range":"436","text":"424"},{"range":"436","text":"425"},{"range":"437","text":"424"},{"range":"437","text":"425"},{"range":"438","text":"424"},{"range":"438","text":"425"},{"range":"439","text":"424"},{"range":"439","text":"425"},{"range":"440","text":"424"},{"range":"440","text":"425"},{"range":"441","text":"424"},{"range":"441","text":"425"},{"range":"442","text":"424"},{"range":"442","text":"425"},{"range":"443","text":"424"},{"range":"443","text":"425"},{"range":"444","text":"424"},{"range":"444","text":"425"},{"range":"445","text":"424"},{"range":"445","text":"425"},{"range":"446","text":"424"},{"range":"446","text":"425"},{"range":"447","text":"424"},{"range":"447","text":"425"},{"range":"448","text":"424"},{"range":"448","text":"425"},[629,632],"unknown","never",[513,516],[522,525],[1002,1005],[1023,1026],[692,695],[479,482],[4722,4725],[4735,4738],[12542,12545],[12555,12558],[1455,1458],[1589,1592],[2721,2724],[13701,13704],[13714,13717],[460,463],[566,569],[487,490],[600,603],[45,48],[57,60],[491,494],[605,608]]