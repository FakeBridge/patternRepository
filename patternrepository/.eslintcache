[{"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx":"1","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx":"2","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx":"3","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx":"4","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx":"5","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx":"6","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx":"7","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx":"8","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx":"9","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx":"10","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx":"11","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx":"12","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx":"13","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx":"14","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx":"15","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx":"16","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx":"17","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx":"18"},{"size":294,"mtime":1617273324544,"results":"19","hashOfConfig":"20"},{"size":275,"mtime":1617273014367,"results":"21","hashOfConfig":"20"},{"size":850,"mtime":1617273613274,"results":"22","hashOfConfig":"20"},{"size":1362,"mtime":1617135087444,"results":"23","hashOfConfig":"20"},{"size":1835,"mtime":1617273068954,"results":"24","hashOfConfig":"20"},{"size":1498,"mtime":1617283929680,"results":"25","hashOfConfig":"20"},{"size":1592,"mtime":1616794887874,"results":"26","hashOfConfig":"20"},{"size":142,"mtime":1616971830312,"results":"27","hashOfConfig":"20"},{"size":439,"mtime":1616971830315,"results":"28","hashOfConfig":"20"},{"size":2157,"mtime":1617273200629,"results":"29","hashOfConfig":"20"},{"size":404,"mtime":1617134952745,"results":"30","hashOfConfig":"20"},{"size":1337,"mtime":1617273179795,"results":"31","hashOfConfig":"20"},{"size":4379,"mtime":1617273123343,"results":"32","hashOfConfig":"20"},{"size":2941,"mtime":1617273160163,"results":"33","hashOfConfig":"20"},{"size":1434,"mtime":1617135087442,"results":"34","hashOfConfig":"20"},{"size":814,"mtime":1617276220316,"results":"35","hashOfConfig":"20"},{"size":3875,"mtime":1617284076878,"results":"36","hashOfConfig":"20"},{"size":196,"mtime":1617283949558,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"g8f8c4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx",[],["81","82","83","84","85"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx",["86"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\nimport { user } from '../types';\r\n\r\nexport const UserContext = createContext<{ user: user }>({\r\n    user: null,\r\n});\r\n\r\ninterface PropsType {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst UserProvider: React.FC<PropsType> = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState<{ user: user }>({\r\n        user: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                const signedUser: any = await generateUserDocument(userAuth, null);\r\n                setCurrentUser({\r\n                    user: {\r\n                        uid: signedUser?.uid,\r\n                        email: signedUser?.email,\r\n                        username: signedUser?.username,\r\n                        avatar: signedUser?.avatar,\r\n                        description: signedUser?.description,\r\n                    },\r\n                });\r\n            } else {\r\n                setCurrentUser({ user: null });\r\n            }\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    return <UserContext.Provider value={currentUser}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport default UserProvider;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx",["87"],"import React, { useContext } from 'react';\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap';\nimport { auth } from '../logic/firebase';\n\nimport { UserContext } from '../logic/providers/userProvider';\n\nconst PageHeader: React.FC = () => {\n    const { user } = useContext(UserContext);\n\n    const logOutHandler = (event: any) => {\n        event.preventDefault();\n        auth.signOut();\n    };\n\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand href=\"/\">patternRepository</NavbarBrand>\n\n                <Nav className=\"\" navbar style={{ width: '-webkit-fill-available' }}>\n                    <NavItem>\n                        <NavLink href=\"/\">Home</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/patterns\">Browse patterns</NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink href=\"/smth\">Smth</NavLink>\n                    </NavItem>\n                    <UncontrolledDropdown nav inNavbar style={{ marginLeft: 'auto' }}>\n                        <DropdownToggle nav caret>\n                            {`Welcome ${user?.username}`}\n                        </DropdownToggle>\n                        <DropdownMenu right>\n                            <DropdownItem href={`/profile/${user?.uid}`}>Profile</DropdownItem>\n                            <DropdownItem divider />\n                            <DropdownItem onClick={logOutHandler}>Log out</DropdownItem>\n                        </DropdownMenu>\n                    </UncontrolledDropdown>\n                </Nav>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default PageHeader;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx",["88","89","90","91","92","93","94","95"],"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nimport firebaseConfig from './firebaseConfig';\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n} else {\n    firebase.app(); // if already initialized, use that one\n}\n\n// firebase.initializeApp();\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n\nconst getUserDocument = async (uid: any) => {\n    if (!uid) return null;\n    try {\n        const userDocument = await firestore.doc(`users/${uid}`).get();\n        const userAvatar = await storage.ref(`/avatars/${uid}`).getDownloadURL();\n        return {\n            uid,\n            ...userDocument.data(),\n            avatar: userAvatar,\n        };\n    } catch (error) {\n        console.error('Error fetching user', error);\n        return null;\n    }\n};\n\nexport const generateUserDocument = async (user: any, additionalData: any) => {\n    if (!user) return {};\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    if (!snapshot.exists) {\n        const { email } = user;\n        try {\n            await userRef.set({\n                username: user.username,\n                email,\n                ...additionalData,\n            });\n        } catch (error) {\n            console.error('Error creating user document', error);\n        }\n    }\n    return getUserDocument(user.uid);\n};\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx",["96"],"import React from 'react';\nimport { Button, Input, Label } from 'reactstrap';\nimport { auth, generateUserDocument } from '../../logic/firebase';\n\nconst SignUp: React.FC = () => {\n    const [username, setUsername] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [passwordRepeat, setPasswordRepeat] = React.useState('');\n\n    const [error, setError] = React.useState<string | null>(null);\n\n    const createUserWithEmailAndPasswordHandler = async (event: any) => {\n        event.preventDefault();\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\n            generateUserDocument(user, { username });\n        } catch (errorData) {\n            setError('Error Signing up with email and password');\n        }\n\n        setUsername('');\n        setEmail('');\n        setPassword('');\n        setPasswordRepeat('');\n        event.preventDefault();\n    };\n\n    return (\n        <div>\n            <Label>Username</Label>\n            <Input\n                placeholder=\"Enter username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <Label>E-mail</Label>\n            <Input\n                placeholder=\"Enter mail\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            <Label>Password</Label>\n            <Input\n                placeholder=\"Enter password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <Label>Repeat password</Label>\n            <Input\n                placeholder=\"Repeat password\"\n                value={passwordRepeat}\n                type=\"password\"\n                onChange={(e) => setPasswordRepeat(e.target.value)}\n            />\n\n            <p>{error}</p>\n            <Button block onClick={createUserWithEmailAndPasswordHandler}>\n                Sign up\n            </Button>\n        </div>\n    );\n};\n\nexport default SignUp;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx",["97","98"],"import React from 'react';\nimport { Button, Input, Label } from 'reactstrap';\nimport { auth } from '../../logic/firebase';\n\nconst SignIn: React.FC = () => {\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const [error, setError] = React.useState<string | null>(null);\n\n    const signInWithEmailAndPasswordHandler = (event: any) => {\n        event.preventDefault();\n        auth.signInWithEmailAndPassword(email, password).catch((errorData) => {\n            setError('Error signing in with password and email!');\n            console.error('Error signing in with password and email', errorData);\n        });\n    };\n\n    return (\n        <div>\n            <Label>E-mail</Label>\n            <Input\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            <Label>password</Label>\n            <Input\n                placeholder=\"Enter password\"\n                value={password}\n                type=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <p>{error}</p>\n            <Button block onClick={signInWithEmailAndPasswordHandler}>\n                Sign in\n            </Button>\n        </div>\n    );\n};\nexport default SignIn;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx",["99"],"import { useState, useContext } from 'react';\r\n\r\nimport { storage } from '../firebase';\r\n\r\nimport { UserContext } from '../providers/userProvider';\r\n\r\nconst useStorage = (file: File | null) => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [url, setUrl] = useState<string | null>(null);\r\n\r\n    // runs every time the file value changes\r\n    const uploadImage = () => {\r\n        if (file) {\r\n            // storage ref\r\n            const storageRef = storage.ref(`avatars/${user?.uid}`);\r\n\r\n            storageRef.put(file).on(\r\n                'state_changed',\r\n                (snap) => {\r\n                    // track the upload progress\r\n                    const percentage = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\r\n                    setProgress(percentage);\r\n                },\r\n                (err) => {\r\n                    setError(err.message);\r\n                },\r\n                async () => {\r\n                    // get the public download img url\r\n                    const downloadUrl = await storageRef.getDownloadURL();\r\n\r\n                    // save the url to local state\r\n                    setUrl(downloadUrl);\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    return { progress, url, error, uploadImage };\r\n};\r\nexport default useStorage;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx",["100"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx",["101","102","103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":21,"column":35,"nodeType":"116","messageId":"117","endLine":21,"endColumn":38,"suggestions":"118"},{"ruleId":"114","severity":1,"message":"115","line":20,"column":35,"nodeType":"116","messageId":"117","endLine":20,"endColumn":38,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"115","line":19,"column":37,"nodeType":"116","messageId":"117","endLine":19,"endColumn":40,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":30,"column":9,"nodeType":"123","messageId":"124","endLine":30,"endColumn":22},{"ruleId":"125","severity":1,"message":"126","line":35,"column":37,"nodeType":"127","messageId":"128","endLine":35,"endColumn":78},{"ruleId":"125","severity":1,"message":"129","line":35,"column":44,"nodeType":"130","messageId":"131","endLine":35,"endColumn":53},{"ruleId":"114","severity":1,"message":"115","line":35,"column":50,"nodeType":"116","messageId":"117","endLine":35,"endColumn":53,"suggestions":"132"},{"ruleId":"125","severity":1,"message":"133","line":35,"column":55,"nodeType":"130","messageId":"131","endLine":35,"endColumn":74},{"ruleId":"114","severity":1,"message":"115","line":35,"column":71,"nodeType":"116","messageId":"117","endLine":35,"endColumn":74,"suggestions":"134"},{"ruleId":"121","severity":1,"message":"122","line":48,"column":13,"nodeType":"123","messageId":"124","endLine":48,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":13,"column":65,"nodeType":"116","messageId":"117","endLine":13,"endColumn":68,"suggestions":"135"},{"ruleId":"114","severity":1,"message":"115","line":11,"column":55,"nodeType":"116","messageId":"117","endLine":11,"endColumn":58,"suggestions":"136"},{"ruleId":"121","severity":1,"message":"122","line":15,"column":13,"nodeType":"123","messageId":"124","endLine":15,"endColumn":26},{"ruleId":"125","severity":1,"message":"126","line":7,"column":20,"nodeType":"127","messageId":"128","endLine":7,"endColumn":42},{"ruleId":"121","severity":1,"message":"122","line":27,"column":21,"nodeType":"123","messageId":"124","endLine":27,"endColumn":32},{"ruleId":"137","severity":2,"message":"138","line":1,"column":13,"nodeType":"130","messageId":"139","endLine":1,"endColumn":17},{"ruleId":"137","severity":2,"message":"140","line":3,"column":6,"nodeType":"130","messageId":"139","endLine":3,"endColumn":14},{"ruleId":"137","severity":2,"message":"141","line":11,"column":13,"nodeType":"130","messageId":"139","endLine":11,"endColumn":20},"lines-around-directive",["142"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["143","144"],["145","146"],["147","148"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","Identifier","anyTypedArg",["149","150"],"Argument 'additionalData' should be typed with a non-any type.",["151","152"],["153","154"],["155","156"],"@typescript-eslint/naming-convention","Type Alias name `user` must match one of the following formats: PascalCase","doesNotMatchFormat","Type Alias name `userInfo` must match one of the following formats: PascalCase","Type Alias name `picture` must match one of the following formats: PascalCase","padding-line-between-statements",{"messageId":"157","fix":"158","desc":"159"},{"messageId":"160","fix":"161","desc":"162"},{"messageId":"157","fix":"163","desc":"159"},{"messageId":"160","fix":"164","desc":"162"},{"messageId":"157","fix":"165","desc":"159"},{"messageId":"160","fix":"166","desc":"162"},{"messageId":"157","fix":"167","desc":"159"},{"messageId":"160","fix":"168","desc":"162"},{"messageId":"157","fix":"169","desc":"159"},{"messageId":"160","fix":"170","desc":"162"},{"messageId":"157","fix":"171","desc":"159"},{"messageId":"160","fix":"172","desc":"162"},{"messageId":"157","fix":"173","desc":"159"},{"messageId":"160","fix":"174","desc":"162"},"suggestUnknown",{"range":"175","text":"176"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"175","text":"177"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"178","text":"176"},{"range":"178","text":"177"},{"range":"179","text":"176"},{"range":"179","text":"177"},{"range":"180","text":"176"},{"range":"180","text":"177"},{"range":"181","text":"176"},{"range":"181","text":"177"},{"range":"182","text":"176"},{"range":"182","text":"177"},{"range":"183","text":"176"},{"range":"183","text":"177"},[629,632],"unknown","never",[444,447],[504,507],[973,976],[994,997],[542,545],[386,389]]