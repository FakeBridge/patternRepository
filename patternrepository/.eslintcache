[{"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx":"1","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx":"2","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx":"3","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx":"4","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx":"5","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx":"6","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx":"7","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx":"8","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx":"9","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx":"10","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx":"11","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx":"12","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx":"13","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx":"14","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx":"15","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx":"16","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx":"17","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx":"18","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx":"19","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx":"20","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx":"21","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx":"22","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx":"23"},{"size":307,"mtime":1617579618711,"results":"24","hashOfConfig":"25"},{"size":288,"mtime":1617579618701,"results":"26","hashOfConfig":"25"},{"size":867,"mtime":1618098926609,"results":"27","hashOfConfig":"25"},{"size":1362,"mtime":1617579618713,"results":"28","hashOfConfig":"25"},{"size":1891,"mtime":1617579618705,"results":"29","hashOfConfig":"25"},{"size":1550,"mtime":1617579618711,"results":"30","hashOfConfig":"25"},{"size":1592,"mtime":1617579618703,"results":"31","hashOfConfig":"25"},{"size":142,"mtime":1617579618702,"results":"32","hashOfConfig":"25"},{"size":439,"mtime":1617579618708,"results":"33","hashOfConfig":"25"},{"size":2224,"mtime":1617579618704,"results":"34","hashOfConfig":"25"},{"size":415,"mtime":1617579618712,"results":"35","hashOfConfig":"25"},{"size":1378,"mtime":1617579618703,"results":"36","hashOfConfig":"25"},{"size":4641,"mtime":1617579618708,"results":"37","hashOfConfig":"25"},{"size":3011,"mtime":1617579618709,"results":"38","hashOfConfig":"25"},{"size":1362,"mtime":1617579618712,"results":"39","hashOfConfig":"25"},{"size":1455,"mtime":1618098974713,"results":"40","hashOfConfig":"25"},{"size":11365,"mtime":1618133410592,"results":"41","hashOfConfig":"25"},{"size":196,"mtime":1617283949558,"results":"42","hashOfConfig":"25"},{"size":2146,"mtime":1618134597750,"results":"43","hashOfConfig":"25"},{"size":863,"mtime":1618093762401,"results":"44","hashOfConfig":"25"},{"size":674,"mtime":1618097729491,"results":"45","hashOfConfig":"25"},{"size":2677,"mtime":1618096922631,"results":"46","hashOfConfig":"25"},{"size":10155,"mtime":1618094853215,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"g8f8c4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx",[],["104","105","106","107","108"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx",["109"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\nimport { user } from '../types';\r\n\r\nexport const UserContext = createContext<{ user: user }>({\r\n    user: null,\r\n});\r\n\r\ninterface PropsType {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst UserProvider: React.FC<PropsType> = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState<{ user: user }>({\r\n        user: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                const signedUser: any = await generateUserDocument(userAuth, null);\r\n                setCurrentUser({\r\n                    user: {\r\n                        uid: signedUser?.uid,\r\n                        email: signedUser?.email,\r\n                        username: signedUser?.username,\r\n                        avatar: signedUser?.avatar,\r\n                        description: signedUser?.description,\r\n                    },\r\n                });\r\n            } else {\r\n                setCurrentUser({ user: null });\r\n            }\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    return <UserContext.Provider value={currentUser}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport default UserProvider;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx",["110"],"import React, { useContext } from 'react';\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n} from 'reactstrap';\r\nimport { auth } from '../logic/firebase';\r\n\r\nimport { UserContext } from '../logic/providers/userProvider';\r\n\r\nconst PageHeader: React.FC = () => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const logOutHandler = (event: any) => {\r\n        event.preventDefault();\r\n        auth.signOut();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"light\" light expand=\"md\">\r\n                <NavbarBrand href=\"/\">patternRepository</NavbarBrand>\r\n\r\n                <Nav className=\"\" navbar style={{ width: '-webkit-fill-available' }}>\r\n                    <NavItem>\r\n                        <NavLink href=\"/\">Home</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/patterns\">Browse patterns</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink href=\"/smth\">Smth</NavLink>\r\n                    </NavItem>\r\n                    <UncontrolledDropdown nav inNavbar style={{ marginLeft: 'auto' }}>\r\n                        <DropdownToggle nav caret>\r\n                            {`Welcome ${user?.username}`}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                            <DropdownItem href={`/profile/${user?.uid}`}>Profile</DropdownItem>\r\n                            <DropdownItem divider />\r\n                            <DropdownItem onClick={logOutHandler}>Log out</DropdownItem>\r\n                        </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n                </Nav>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageHeader;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx",["111","112","113","114","115","116","117","118"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n} else {\r\n    firebase.app(); // if already initialized, use that one\r\n}\r\n\r\n// firebase.initializeApp();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        const userAvatar = await storage.ref(`/avatars/${uid}`).getDownloadURL();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n            avatar: userAvatar,\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching user', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const generateUserDocument = async (user: any, additionalData: any) => {\r\n    if (!user) return {};\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email } = user;\r\n        try {\r\n            await userRef.set({\r\n                username: user.username,\r\n                email,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx",["119"],"import React from 'react';\r\nimport { Button, Input, Label } from 'reactstrap';\r\nimport { auth, generateUserDocument } from '../../logic/firebase';\r\n\r\nconst SignUp: React.FC = () => {\r\n    const [username, setUsername] = React.useState('');\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n    const [passwordRepeat, setPasswordRepeat] = React.useState('');\r\n\r\n    const [error, setError] = React.useState<string | null>(null);\r\n\r\n    const createUserWithEmailAndPasswordHandler = async (event: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n            generateUserDocument(user, { username });\r\n        } catch (errorData) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordRepeat('');\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Label>Username</Label>\r\n            <Input\r\n                placeholder=\"Enter username\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Label>E-mail</Label>\r\n            <Input\r\n                placeholder=\"Enter mail\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Label>Password</Label>\r\n            <Input\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Label>Repeat password</Label>\r\n            <Input\r\n                placeholder=\"Repeat password\"\r\n                value={passwordRepeat}\r\n                type=\"password\"\r\n                onChange={(e) => setPasswordRepeat(e.target.value)}\r\n            />\r\n\r\n            <p>{error}</p>\r\n            <Button block onClick={createUserWithEmailAndPasswordHandler}>\r\n                Sign up\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx",["120","121"],"import React from 'react';\r\nimport { Button, Input, Label } from 'reactstrap';\r\nimport { auth } from '../../logic/firebase';\r\n\r\nconst SignIn: React.FC = () => {\r\n    const [email, setEmail] = React.useState('');\r\n    const [password, setPassword] = React.useState('');\r\n\r\n    const [error, setError] = React.useState<string | null>(null);\r\n\r\n    const signInWithEmailAndPasswordHandler = (event: any) => {\r\n        event.preventDefault();\r\n        auth.signInWithEmailAndPassword(email, password).catch((errorData) => {\r\n            setError('Error signing in with password and email!');\r\n            console.error('Error signing in with password and email', errorData);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Label>E-mail</Label>\r\n            <Input\r\n                placeholder=\"Enter email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Label>password</Label>\r\n            <Input\r\n                placeholder=\"Enter password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <p>{error}</p>\r\n            <Button block onClick={signInWithEmailAndPasswordHandler}>\r\n                Sign in\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\nexport default SignIn;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx",["122"],"import { useState } from 'react';\r\n\r\nimport { storage } from '../firebase';\r\n\r\nconst useStorage = (file: File | null) => {\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [url, setUrl] = useState<string | null>(null);\r\n\r\n    // runs every time the file value changes\r\n    const uploadImage = (storageName: string, pictureName: string) => {\r\n        if (file) {\r\n            // storage ref\r\n            const storageRef = storage.ref(`${storageName}/${pictureName}`);\r\n\r\n            storageRef.put(file).on(\r\n                'state_changed',\r\n                (snap) => {\r\n                    // track the upload progress\r\n                    const percentage = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\r\n                    setProgress(percentage);\r\n                },\r\n                (err) => {\r\n                    setError(err.message);\r\n                },\r\n                async () => {\r\n                    // get the public download img url\r\n                    const downloadUrl = await storageRef.getDownloadURL();\r\n\r\n                    // save the url to local state\r\n                    setUrl(downloadUrl);\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    return { progress, url, error, uploadImage };\r\n};\r\nexport default useStorage;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx",["123","124"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx",["125","126","127"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx",["128","129"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx",["130","131","132","133","134","135"],"import { firestore, auth } from '../firebase';\nimport { pattern, patternToAdd } from '../types';\n\nconst collectionRef = firestore.collection('/patterns');\n\nconst getAll = () => {\n    return collectionRef;\n};\n\nconst getAllMine = () => {\n    if (auth?.currentUser?.uid) {\n        return collectionRef.where('owner', '==', auth.currentUser.uid);\n    }\n    return [];\n};\n\nconst create = (data: patternToAdd) => {\n    return collectionRef.add(data);\n};\n\nconst update = (id: string, value: pattern) => {\n    return collectionRef.doc(id).update(value);\n};\n\nconst set = (id: string, value: patternToAdd) => {\n    return collectionRef.doc(id).set(value);\n};\n\nconst remove = (id: string) => {\n    return collectionRef.doc(id).delete();\n};\n\nconst PatternService = {\n    getAll,\n    getAllMine,\n    set,\n    create,\n    update,\n    remove,\n};\n\nexport default PatternService;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx",["136"],"import React, { useState } from 'react';\nimport EditPattern from './editPattern';\nimport ViewPattern from './viewPattern';\nimport { pattern } from '../../logic/types';\n\ninterface PropsType {\n    closeModal: () => void;\n    currentPattern: pattern | null;\n}\n\nconst PatternContainer: React.FC<PropsType> = ({ closeModal, currentPattern }) => {\n    const [openEdit, setOpenEdit] = useState<boolean>(false);\n\n    console.log(currentPattern);\n\n    return (\n        <>\n            {openEdit && <EditPattern openEdit={setOpenEdit} />}\n            {!openEdit && <ViewPattern openEdit={setOpenEdit} closeModal={closeModal} />}\n        </>\n    );\n};\n\nexport default PatternContainer;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx",["137","138"],"import React, { useState, useMemo } from 'react';\nimport { Button, FormGroup, Input, Label } from 'reactstrap';\n\nimport { storage } from '../../logic/firebase';\n\ninterface PropsType {\n    openEdit: (open: boolean) => void;\n}\n\nconst EditPattern: React.FC<PropsType> = ({ openEdit }) => {\n    const [title, setTitle] = useState<string | number | readonly string[] | undefined>('');\n    const [tags, setTags] = useState<any>([]);\n    const [description, setDescription] = useState<string | number | readonly string[] | undefined>(\n        '',\n    );\n    const [difficulty, setDifficulty] = useState<string | number | readonly string[] | undefined>(\n        3,\n    );\n\n    const [newOpen, setNewOpen] = useState<boolean>(false);\n\n    const [patternPictures, setPatternPictures] = useState<File[]>([]);\n    const [finishedWorkPictures, setFinishedWorkPictures] = useState<File[]>([]);\n\n    const [error, setError] = useState<string | null>(null);\n\n    const imageTypes = ['image/png', 'image/jpeg', 'image/jpg'];\n\n    const id = useMemo(\n        () =>\n            `${newOpen ? 'y' : ''}${(new Date().getTime() / 1000).toFixed(0)}${new Array(5)\n                .join()\n                .replace(/(.|$)/g, function () {\n                    return (Math.random() * 36)\n                        .toString(36)\n                        [Math.random() < 0.5 ? 'toString' : 'toUpperCase']();\n                })}`,\n        [newOpen],\n    );\n\n    const HandlePatternImageChange = (selectedFile: File | null) => {\n        if (selectedFile) {\n            if (imageTypes.includes(selectedFile.type)) {\n                const maxAllowSize = 5 * 1024 * 1024;\n                if (selectedFile.size > maxAllowSize) {\n                    setError('Image is too big! Maximum size is 5MB.');\n                } else {\n                    const storageRef = storage.ref(`patternImages/${id}/${selectedFile.name}`);\n\n                    storageRef.put(selectedFile).on(\n                        'state_changed',\n                        () => {},\n                        (err) => {\n                            setError(err.message);\n                        },\n                    );\n                    setPatternPictures([...patternPictures, selectedFile]);\n                }\n            } else {\n                setError('Please use only select an image file (png or jpg)');\n            }\n        }\n    };\n\n    const HandleWorkImageChange = (selectedFile: File | null) => {\n        if (selectedFile) {\n            if (imageTypes.includes(selectedFile.type)) {\n                const maxAllowSize = 5 * 1024 * 1024;\n                if (selectedFile.size > maxAllowSize) {\n                    setError('Image is too big! Maximum size is 5MB.');\n                } else {\n                    const storageRef = storage.ref(`finishedWorkImages/${id}/${selectedFile.name}`);\n\n                    storageRef.put(selectedFile).on(\n                        'state_changed',\n                        () => {},\n                        (err) => {\n                            setError(err.message);\n                        },\n                    );\n\n                    setFinishedWorkPictures([...finishedWorkPictures, selectedFile]);\n                }\n            } else {\n                setError('Please use only select an image file (png or jpg)');\n            }\n        }\n    };\n\n    const removePaternPicture = (index: number) => {\n        const newPictures: File[] = [...patternPictures.filter((_, i) => i !== index)];\n        const fileToRemove: File = patternPictures[index];\n        const storageRef = storage.ref(`patternImages/${id}/${fileToRemove.name}`);\n        storageRef\n            .delete()\n            .then(() => {\n                setPatternPictures(newPictures);\n            })\n            .catch((err) => {\n                setError(err.message);\n            });\n    };\n\n    const removeWorkPicture = (index: number) => {\n        const newPictures: File[] = [...finishedWorkPictures.filter((_, i) => i !== index)];\n        const fileToRemove: File = finishedWorkPictures[index];\n        const storageRef = storage.ref(`finishedWorkImages/${id}/${fileToRemove.name}`);\n        storageRef\n            .delete()\n            .then(() => {\n                setFinishedWorkPictures(newPictures);\n            })\n            .catch((err) => {\n                setError(err.message);\n            });\n    };\n\n    const handleSubmit = () => {};\n\n    const handleCancel = () => {\n        let newError = 'Errors:';\n        newError = '';\n        patternPictures.forEach((picture) => {\n            storage\n                .ref(`patternImages/${id}/${picture.name}`)\n                .delete()\n                .catch((err: Error) => {\n                    newError.concat(err.message);\n                });\n        });\n        finishedWorkPictures.forEach((picture) => {\n            storage\n                .ref(`finishedWorkImages/${id}/${picture.name}`)\n                .delete()\n                .catch((err: Error) => {\n                    newError.concat(err.message);\n                });\n        });\n        if (newError.length) {\n            setError(newError);\n        } else {\n            setNewOpen(true);\n            openEdit(false);\n        }\n    };\n\n    return (\n        <div style={{}}>\n            <h1>Edit this pattern</h1>\n\n            <FormGroup>\n                <Label for=\"title\">Title</Label>\n                <Input\n                    name=\"patternTitle\"\n                    id=\"title\"\n                    placeholder=\"Enter title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label for=\"tags\">Tags</Label>\n                <Input\n                    type=\"select\"\n                    multiple\n                    name=\"patternTags\"\n                    id=\"tags\"\n                    value={tags}\n                    onChange={(e) => setTags(e.target.value)}\n                >\n                    <option>Tag 1</option>\n                    <option>Tag 2 </option>\n                    <option>Tag 3</option>\n                </Input>\n            </FormGroup>\n\n            <FormGroup>\n                <Label for=\"difficulty\">Difficulty</Label>\n                <Input\n                    type=\"range\"\n                    id=\"difficulty\"\n                    name=\"patternDifficulty\"\n                    min={1}\n                    max={5}\n                    step={1}\n                    value={difficulty}\n                    onChange={(e) => setDifficulty(e.target.value)}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label for=\"books\">Add to...</Label>\n                <Input type=\"select\" multiple name=\"patternBooks\" id=\"books\">\n                    <option>Book 1</option>\n                    <option>Book 2 </option>\n                    <option>Book 3</option>\n                </Input>\n            </FormGroup>\n\n            <FormGroup>\n                <Label for=\"description\">Description</Label>\n                <Input\n                    type=\"textarea\"\n                    name=\"patternDescription\"\n                    id=\"description\"\n                    placeholder=\"Enter description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label for=\"description\" style={{ display: 'block' }}>\n                    Pattern pictures\n                </Label>\n                <>\n                    {patternPictures.map((picture, index) => (\n                        <div key={picture.name}>\n                            <Label>{picture.name}</Label>\n                            <img src={picture.name} alt=\"pattern\" width=\"100px\" height=\"100px\" />\n                            <Button color=\"danger\" onClick={() => removePaternPicture(index)}>\n                                x\n                            </Button>\n                        </div>\n                    ))}\n                    <Input\n                        type=\"file\"\n                        onChange={(e) =>\n                            HandlePatternImageChange(e?.target?.files ? e?.target?.files[0] : null)\n                        }\n                    />\n                    <Button color=\"info\" onClick={() => {}}>\n                        +\n                    </Button>\n                </>\n            </FormGroup>\n\n            <FormGroup>\n                <Label for=\"description\" style={{ display: 'block' }}>\n                    Finished works\n                </Label>\n                <>\n                    {finishedWorkPictures.map((picture, index) => (\n                        <div key={picture.name}>\n                            <Label>{picture.name}</Label>\n                            <img\n                                src={picture.name}\n                                alt=\"finishedWork\"\n                                width=\"100px\"\n                                height=\"100px\"\n                            />\n                            <Button color=\"danger\" onClick={() => removeWorkPicture(index)}>\n                                x\n                            </Button>\n                        </div>\n                    ))}\n                    <Input\n                        type=\"file\"\n                        onChange={(e) =>\n                            HandleWorkImageChange(e?.target?.files ? e?.target?.files[0] : null)\n                        }\n                    />\n                    <Button color=\"info\" onClick={() => {}}>\n                        +\n                    </Button>\n                </>\n            </FormGroup>\n\n            {error && <p>{error}</p>}\n            <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                <Button color=\"info\" onClick={handleCancel}>\n                    Cancel\n                </Button>\n\n                <Button color=\"info\" style={{ marginLeft: 'auto' }} onClick={handleSubmit}>\n                    Save\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default EditPattern;\n",{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":21,"column":35,"nodeType":"151","messageId":"152","endLine":21,"endColumn":38,"suggestions":"153"},{"ruleId":"149","severity":1,"message":"150","line":20,"column":35,"nodeType":"151","messageId":"152","endLine":20,"endColumn":38,"suggestions":"154"},{"ruleId":"149","severity":1,"message":"150","line":19,"column":37,"nodeType":"151","messageId":"152","endLine":19,"endColumn":40,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":30,"column":9,"nodeType":"158","messageId":"159","endLine":30,"endColumn":22},{"ruleId":"160","severity":1,"message":"161","line":35,"column":37,"nodeType":"162","messageId":"163","endLine":35,"endColumn":78},{"ruleId":"160","severity":1,"message":"164","line":35,"column":44,"nodeType":"165","messageId":"166","endLine":35,"endColumn":53},{"ruleId":"149","severity":1,"message":"150","line":35,"column":50,"nodeType":"151","messageId":"152","endLine":35,"endColumn":53,"suggestions":"167"},{"ruleId":"160","severity":1,"message":"168","line":35,"column":55,"nodeType":"165","messageId":"166","endLine":35,"endColumn":74},{"ruleId":"149","severity":1,"message":"150","line":35,"column":71,"nodeType":"151","messageId":"152","endLine":35,"endColumn":74,"suggestions":"169"},{"ruleId":"156","severity":1,"message":"157","line":48,"column":13,"nodeType":"158","messageId":"159","endLine":48,"endColumn":26},{"ruleId":"149","severity":1,"message":"150","line":13,"column":65,"nodeType":"151","messageId":"152","endLine":13,"endColumn":68,"suggestions":"170"},{"ruleId":"149","severity":1,"message":"150","line":11,"column":55,"nodeType":"151","messageId":"152","endLine":11,"endColumn":58,"suggestions":"171"},{"ruleId":"156","severity":1,"message":"157","line":15,"column":13,"nodeType":"158","messageId":"159","endLine":15,"endColumn":26},{"ruleId":"160","severity":1,"message":"161","line":5,"column":20,"nodeType":"162","messageId":"163","endLine":5,"endColumn":42},{"ruleId":"149","severity":1,"message":"150","line":18,"column":38,"nodeType":"151","messageId":"152","endLine":18,"endColumn":41,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":35,"column":36,"nodeType":"175","messageId":"176","endLine":35,"endColumn":45},{"ruleId":"177","severity":2,"message":"178","line":1,"column":13,"nodeType":"165","messageId":"179","endLine":1,"endColumn":17},{"ruleId":"177","severity":2,"message":"180","line":3,"column":6,"nodeType":"165","messageId":"179","endLine":3,"endColumn":14},{"ruleId":"177","severity":2,"message":"181","line":11,"column":13,"nodeType":"165","messageId":"179","endLine":11,"endColumn":20},{"ruleId":"149","severity":1,"message":"150","line":13,"column":34,"nodeType":"151","messageId":"152","endLine":13,"endColumn":37,"suggestions":"182"},{"ruleId":"149","severity":1,"message":"150","line":17,"column":35,"nodeType":"151","messageId":"152","endLine":17,"endColumn":38,"suggestions":"183"},{"ruleId":"160","severity":1,"message":"161","line":6,"column":16,"nodeType":"162","messageId":"163","endLine":6,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":10,"column":20,"nodeType":"162","messageId":"163","endLine":10,"endColumn":25},{"ruleId":"160","severity":1,"message":"161","line":17,"column":16,"nodeType":"162","messageId":"163","endLine":17,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":21,"column":16,"nodeType":"162","messageId":"163","endLine":21,"endColumn":47},{"ruleId":"160","severity":1,"message":"161","line":25,"column":13,"nodeType":"162","messageId":"163","endLine":25,"endColumn":49},{"ruleId":"160","severity":1,"message":"161","line":29,"column":16,"nodeType":"162","messageId":"163","endLine":29,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":14,"column":5,"nodeType":"158","messageId":"159","endLine":14,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":12,"column":38,"nodeType":"151","messageId":"152","endLine":12,"endColumn":41,"suggestions":"184"},{"ruleId":"173","severity":1,"message":"174","line":33,"column":36,"nodeType":"175","messageId":"176","endLine":33,"endColumn":45},"lines-around-directive",["185"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["186","187"],["188","189"],["190","191"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","Identifier","anyTypedArg",["192","193"],"Argument 'additionalData' should be typed with a non-any type.",["194","195"],["196","197"],["198","199"],["200","201"],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed","@typescript-eslint/naming-convention","Type Alias name `user` must match one of the following formats: PascalCase","doesNotMatchFormat","Type Alias name `userInfo` must match one of the following formats: PascalCase","Type Alias name `picture` must match one of the following formats: PascalCase",["202","203"],["204","205"],["206","207"],"padding-line-between-statements",{"messageId":"208","fix":"209","desc":"210"},{"messageId":"211","fix":"212","desc":"213"},{"messageId":"208","fix":"214","desc":"210"},{"messageId":"211","fix":"215","desc":"213"},{"messageId":"208","fix":"216","desc":"210"},{"messageId":"211","fix":"217","desc":"213"},{"messageId":"208","fix":"218","desc":"210"},{"messageId":"211","fix":"219","desc":"213"},{"messageId":"208","fix":"220","desc":"210"},{"messageId":"211","fix":"221","desc":"213"},{"messageId":"208","fix":"222","desc":"210"},{"messageId":"211","fix":"223","desc":"213"},{"messageId":"208","fix":"224","desc":"210"},{"messageId":"211","fix":"225","desc":"213"},{"messageId":"208","fix":"226","desc":"210"},{"messageId":"211","fix":"227","desc":"213"},{"messageId":"208","fix":"228","desc":"210"},{"messageId":"211","fix":"229","desc":"213"},{"messageId":"208","fix":"230","desc":"210"},{"messageId":"211","fix":"231","desc":"213"},{"messageId":"208","fix":"232","desc":"210"},{"messageId":"211","fix":"233","desc":"213"},"suggestUnknown",{"range":"234","text":"235"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"234","text":"236"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"237","text":"235"},{"range":"237","text":"236"},{"range":"238","text":"235"},{"range":"238","text":"236"},{"range":"239","text":"235"},{"range":"239","text":"236"},{"range":"240","text":"235"},{"range":"240","text":"236"},{"range":"241","text":"235"},{"range":"241","text":"236"},{"range":"242","text":"235"},{"range":"242","text":"236"},{"range":"243","text":"235"},{"range":"243","text":"236"},{"range":"244","text":"235"},{"range":"244","text":"236"},{"range":"245","text":"235"},{"range":"245","text":"236"},{"range":"246","text":"235"},{"range":"246","text":"236"},[629,632],"unknown","never",[463,466],[522,525],[1007,1010],[1028,1031],[554,557],[396,399],[622,625],[435,438],[557,560],[417,420]]