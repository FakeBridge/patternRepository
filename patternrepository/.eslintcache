[{"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx":"1","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx":"2","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx":"3","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx":"4","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx":"5","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx":"6","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx":"7","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx":"8","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx":"9","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx":"10","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx":"11","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx":"12","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx":"13","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx":"14","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx":"15","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx":"16","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx":"17","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx":"18","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx":"19","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx":"20","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx":"21","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx":"22","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx":"23","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx":"24","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\styledComponents.tsx":"25","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\tagProvider.tsx":"26","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\books\\addBook.tsx":"27","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\bookServices.tsx":"28","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\bookProvider.tsx":"29","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\selectStyles.tsx":"30","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\helperFunctions.tsx":"31","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternPrint.jsx":"32","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toPrint.jsx":"33","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toExport.jsx":"34","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toExport2.jsx":"35"},{"size":672,"mtime":1618688616566,"results":"36","hashOfConfig":"37"},{"size":275,"mtime":1618591518992,"results":"38","hashOfConfig":"37"},{"size":1136,"mtime":1618763317552,"results":"39","hashOfConfig":"37"},{"size":1421,"mtime":1618524201234,"results":"40","hashOfConfig":"37"},{"size":1759,"mtime":1618763518914,"results":"41","hashOfConfig":"37"},{"size":1545,"mtime":1618610348765,"results":"42","hashOfConfig":"37"},{"size":1535,"mtime":1618524201222,"results":"43","hashOfConfig":"37"},{"size":135,"mtime":1618332767713,"results":"44","hashOfConfig":"37"},{"size":423,"mtime":1618332668472,"results":"45","hashOfConfig":"37"},{"size":3271,"mtime":1618610348755,"results":"46","hashOfConfig":"37"},{"size":415,"mtime":1617579618712,"results":"47","hashOfConfig":"37"},{"size":1768,"mtime":1618524201223,"results":"48","hashOfConfig":"37"},{"size":4984,"mtime":1618610348762,"results":"49","hashOfConfig":"37"},{"size":3282,"mtime":1618610348762,"results":"50","hashOfConfig":"37"},{"size":1362,"mtime":1617579618712,"results":"51","hashOfConfig":"37"},{"size":2768,"mtime":1618610348759,"results":"52","hashOfConfig":"37"},{"size":14278,"mtime":1618763978378,"results":"53","hashOfConfig":"37"},{"size":196,"mtime":1617283949558,"results":"54","hashOfConfig":"37"},{"size":4469,"mtime":1618688616561,"results":"55","hashOfConfig":"37"},{"size":1020,"mtime":1618610348768,"results":"56","hashOfConfig":"37"},{"size":1037,"mtime":1618336456802,"results":"57","hashOfConfig":"37"},{"size":4635,"mtime":1618688616564,"results":"58","hashOfConfig":"37"},{"size":16428,"mtime":1618763979221,"results":"59","hashOfConfig":"37"},{"size":650,"mtime":1618763627960,"results":"60","hashOfConfig":"37"},{"size":9397,"mtime":1618763455403,"results":"61","hashOfConfig":"37"},{"size":1146,"mtime":1618761398340,"results":"62","hashOfConfig":"37"},{"size":2668,"mtime":1618610348757,"results":"63","hashOfConfig":"37"},{"size":1005,"mtime":1618610348767,"results":"64","hashOfConfig":"37"},{"size":1319,"mtime":1618610348766,"results":"65","hashOfConfig":"37"},{"size":227,"mtime":1618610348763,"results":"66","hashOfConfig":"37"},{"size":279,"mtime":1618610348766,"results":"67","hashOfConfig":"37"},{"size":1175,"mtime":1618688616561,"results":"68","hashOfConfig":"37"},{"size":2586,"mtime":1618688616563,"results":"69","hashOfConfig":"37"},{"size":2458,"mtime":1618685794822,"results":"70","hashOfConfig":"37"},{"size":1653,"mtime":1618688616563,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g8f8c4",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx",[],["155","156","157","158","159"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx",["160"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport { auth, generateUserDocument } from '../firebase';\r\nimport { user } from '../types';\r\n\r\nexport const UserContext = createContext<{ user: user }>({\r\n    user: null,\r\n});\r\n\r\ninterface PropsType {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst UserProvider: React.FC<PropsType> = ({ children }) => {\r\n    const [currentUser, setCurrentUser] = useState<{ user: user }>({\r\n        user: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\r\n            if (userAuth) {\r\n                const signedUser: any = await generateUserDocument(userAuth, null);\r\n                setCurrentUser({\r\n                    user: {\r\n                        uid: signedUser?.uid,\r\n                        email: signedUser?.email,\r\n                        username: signedUser?.username,\r\n                        avatar: signedUser?.avatar,\r\n                        description: signedUser?.description,\r\n                        darkTheme: signedUser?.darkTheme,\r\n                    },\r\n                });\r\n            } else {\r\n                setCurrentUser({ user: null });\r\n            }\r\n        });\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, []);\r\n\r\n    return <UserContext.Provider value={currentUser}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport default UserProvider;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx",["161"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx",["162","163","164","165","166","167","168","169"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n} else {\r\n    firebase.app(); // if already initialized, use that one\r\n}\r\n\r\n// firebase.initializeApp();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        // const userAvatar = await storage.ref(`/avatars/${uid}`)?.getDownloadURL();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n            avatar: null, // userAvatar,\r\n        };\r\n    } catch (error) {\r\n        console.error(error.code);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const generateUserDocument = async (user: any, additionalData: any) => {\r\n    if (!user) return {};\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email } = user;\r\n        try {\r\n            await userRef.set({\r\n                username: user.username,\r\n                email,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx",["170"],"import React, { useState } from 'react';\r\nimport { auth, generateUserDocument } from '../../logic/firebase';\r\n\r\nimport { isEmail } from '../../logic/helperFunctions';\r\n\r\nimport {\r\n    SuccessButton,\r\n    Input,\r\n    Label,\r\n    FormGroup,\r\n    DangerAlert,\r\n    HelperText,\r\n} from '../../design/styledComponents';\r\n\r\nconst SignUp: React.FC = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordRepeat, setPasswordRepeat] = useState('');\r\n\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const createUserWithEmailAndPasswordHandler = async (event: any) => {\r\n        event.preventDefault();\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n            generateUserDocument(user, { username });\r\n        } catch (errorData) {\r\n            setError('Error Signing up with email and password');\r\n        }\r\n\r\n        setUsername('');\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordRepeat('');\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <FormGroup>\r\n                <Label>Username</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter username\"\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <HelperText>You can change your username later ^^</HelperText>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>E-mail</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter mail\"\r\n                    type=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                        if (!isEmail(e.target.value)) {\r\n                            setError('This is not a valid email!');\r\n                        } else {\r\n                            setError(null);\r\n                        }\r\n                        setEmail(e.target.value);\r\n                    }}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <HelperText>Password has to have at least six characters</HelperText>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Repeat password</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Repeat password\"\r\n                    value={passwordRepeat}\r\n                    type=\"password\"\r\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\r\n                />\r\n            </FormGroup>\r\n\r\n            {error && <DangerAlert>{error}</DangerAlert>}\r\n            <SuccessButton block onClick={createUserWithEmailAndPasswordHandler}>\r\n                Sign up\r\n            </SuccessButton>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx",["171","172"],"import React, { useState, useCallback } from 'react';\r\nimport { auth } from '../../logic/firebase';\r\n\r\nimport { SuccessButton, Input, Label, FormGroup, DangerAlert } from '../../design/styledComponents';\r\n\r\nconst SignIn: React.FC = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const signInWithEmailAndPasswordHandler = useCallback(\r\n        (event: any) => {\r\n            event.preventDefault();\r\n            auth.signInWithEmailAndPassword(email, password).catch((errorData) => {\r\n                setError('Error signing in with password and email!');\r\n                console.error('Error signing in with password and email', errorData);\r\n            });\r\n        },\r\n        [email, password],\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <FormGroup>\r\n                <Label>E-mail</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label>Password</Label>\r\n                <Input\r\n                    block\r\n                    placeholder=\"Enter password\"\r\n                    value={password}\r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n            </FormGroup>\r\n            {error && <DangerAlert>{error}</DangerAlert>}\r\n            <SuccessButton block onClick={signInWithEmailAndPasswordHandler}>\r\n                Sign in\r\n            </SuccessButton>\r\n        </>\r\n    );\r\n};\r\nexport default SignIn;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx",["173","174"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nimport { UserContext } from '../../logic/providers/userProvider';\r\n\r\nimport useStorage from '../../logic/hooks/useStorage';\r\n\r\nimport { firestore } from '../../logic/firebase';\r\n\r\nimport {\r\n    Main,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    MarginItemDetail,\r\n    ButtonRow,\r\n    SuccessButton,\r\n    CancelButton,\r\n    DangerAlert,\r\n    SuccessAlert,\r\n} from '../../design/styledComponents';\r\n\r\ninterface PropsType {\r\n    openEdit: (open: boolean) => void;\r\n}\r\n\r\nconst ProfileEdit: React.FC<PropsType> = ({ openEdit }) => {\r\n    const { user } = useContext(UserContext);\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [file, setFile] = useState<File | null>(null);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [saved, setSaved] = useState<boolean>(false);\r\n\r\n    const types = ['image/png', 'image/jpeg', 'image/jpg'];\r\n\r\n    useEffect(() => {\r\n        let name = '';\r\n        let descriptionText = '';\r\n        if (user && user.username) {\r\n            name = user.username;\r\n        }\r\n        if (user && user.description) {\r\n            descriptionText = user.description;\r\n        }\r\n        setUsername(name);\r\n        setDescription(descriptionText);\r\n    }, [user]);\r\n\r\n    const { progress, url, uploadImage } = useStorage(file);\r\n\r\n    const handleImageChange = (selectedFile: File | null) => {\r\n        if (selectedFile) {\r\n            if (types.includes(selectedFile.type)) {\r\n                const maxAllowSize = 5 * 1024 * 1024;\r\n                if (selectedFile.size > maxAllowSize) {\r\n                    setError('Image is too big! Maximum size is 5MB.');\r\n                } else {\r\n                    setError(null);\r\n                    setFile(selectedFile);\r\n                }\r\n            } else {\r\n                setFile(null);\r\n                setError('Please use only select an image file (png or jpg)');\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateData = () => {\r\n        firestore\r\n            .collection(`users`)\r\n            .doc(`${user?.uid}`)\r\n            .update({\r\n                username,\r\n                description,\r\n            })\r\n            .then(() => {\r\n                setSaved(true);\r\n            })\r\n            .catch((errorData) => {\r\n                setError(errorData?.message);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Main>\r\n            <MarginItemDetail>\r\n                <ButtonRow>\r\n                    <CancelButton onClick={() => openEdit(false)} block={false}>\r\n                        Close\r\n                    </CancelButton>\r\n\r\n                    <SuccessButton onClick={() => updateData()} block={false}>\r\n                        Save\r\n                    </SuccessButton>\r\n                </ButtonRow>\r\n\r\n                {saved && <SuccessAlert>Your changes were saved!</SuccessAlert>}\r\n\r\n                {error && <DangerAlert>{error}</DangerAlert>}\r\n\r\n                <FormGroup>\r\n                    <Label>Profile picture</Label>\r\n                    {url && (\r\n                        <img\r\n                            style={{ width: '100px', height: '100px', objectFit: 'cover' }}\r\n                            src={url}\r\n                            alt=\"\"\r\n                        />\r\n                    )}\r\n                    <Input\r\n                        block\r\n                        type=\"file\"\r\n                        onChange={(e) =>\r\n                            handleImageChange(e?.target?.files ? e?.target?.files[0] : null)\r\n                        }\r\n                    />\r\n                    {file && (\r\n                        <SuccessButton\r\n                            block={false}\r\n                            onClick={() => uploadImage('avatars', user?.uid ? user.uid : '')}\r\n                        >\r\n                            Save image{' '}\r\n                        </SuccessButton>\r\n                    )}\r\n                    {file && progress > 0 && progress < 100 && <p>{`${progress}% uploaded`}</p>}\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>Username</Label>\r\n                    <Input block value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Label>{`Something about you <3`}</Label>\r\n                    <CKEditor\r\n                        editor={ClassicEditor}\r\n                        data={description}\r\n                        onChange={(event: any, editor: any) => {\r\n                            setDescription(editor.getData());\r\n                        }}\r\n                    />\r\n                </FormGroup>\r\n            </MarginItemDetail>\r\n        </Main>\r\n    );\r\n};\r\n\r\nexport default ProfileEdit;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx",["175"],"import { useState } from 'react';\r\n\r\nimport { storage } from '../firebase';\r\n\r\nconst useStorage = (file: File | null) => {\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [url, setUrl] = useState<string | null>(null);\r\n\r\n    // runs every time the file value changes\r\n    const uploadImage = (storageName: string, pictureName: string) => {\r\n        if (file) {\r\n            // storage ref\r\n            const storageRef = storage.ref(`${storageName}/${pictureName}`);\r\n\r\n            storageRef.put(file).on(\r\n                'state_changed',\r\n                (snap) => {\r\n                    // track the upload progress\r\n                    const percentage = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\r\n                    setProgress(percentage);\r\n                },\r\n                (err) => {\r\n                    setError(err.message);\r\n                },\r\n                async () => {\r\n                    // get the public download img url\r\n                    const downloadUrl = await storageRef.getDownloadURL();\r\n\r\n                    // save the url to local state\r\n                    setUrl(downloadUrl);\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    return { progress, url, error, uploadImage };\r\n};\r\nexport default useStorage;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx",["176","177","178"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx",["179","180","181"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx",["182","183"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx",["184","185","186","187","188","189","190"],"import { firestore, auth } from '../firebase';\r\nimport { patternToAdd } from '../types';\r\n\r\nconst collectionRef = firestore.collection('/patterns');\r\n\r\nconst getAll = () => {\r\n    return collectionRef;\r\n};\r\n\r\nconst getAllMine = () => {\r\n    if (auth?.currentUser?.uid) {\r\n        return collectionRef.where('owner', '==', auth.currentUser.uid);\r\n    }\r\n    return [];\r\n};\r\n\r\nconst getAllOfUser = (uid: string) => {\r\n    return collectionRef.where('owner', '==', uid);\r\n};\r\n\r\nconst create = (data: patternToAdd) => {\r\n    return collectionRef.add(data);\r\n};\r\n\r\nconst update = (id: string, value: patternToAdd) => {\r\n    return collectionRef.doc(id).update(value);\r\n};\r\n\r\nconst set = (id: string, value: patternToAdd) => {\r\n    return collectionRef.doc(id).set(value);\r\n};\r\n\r\nconst remove = (id: string) => {\r\n    return collectionRef.doc(id).delete();\r\n};\r\n\r\nconst PatternService = {\r\n    getAll,\r\n    getAllMine,\r\n    getAllOfUser,\r\n    set,\r\n    create,\r\n    update,\r\n    remove,\r\n};\r\n\r\nexport default PatternService;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx",["191","192","193"],"import React, { useState, useCallback, useContext, useMemo } from 'react';\nimport Select from 'react-select';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { storage } from '../../logic/firebase';\nimport PatternService from '../../logic/services/patternServices';\nimport { TagContext } from '../../logic/providers/tagProvider';\nimport { BookContext } from '../../logic/providers/bookProvider';\nimport TagService from '../../logic/services/tagServices';\n\nimport {\n    pattern,\n    patternToAdd,\n    basicImage,\n    tag as tagType,\n    tagToAdd,\n    book,\n} from '../../logic/types';\n\nimport multiSelectWithColour from '../../design/selectStyles';\n\nimport {\n    FormGroup,\n    Input,\n    Label,\n    ItemDetail,\n    ItemHeader,\n    ButtonRow,\n    SuccessButton,\n    CancelButton,\n    DifficultyInput,\n    FormImageContainer,\n    IconButton,\n    DangerAlert,\n} from '../../design/styledComponents';\n\ninterface PropsType {\n    openEdit: (open: boolean) => void;\n    closeModal: () => void;\n    currentPattern: pattern;\n}\nconst imageTypes = ['image/png', 'image/jpeg', 'image/jpg'];\n\nconst EditPattern: React.FC<PropsType> = React.memo(({ openEdit, closeModal, currentPattern }) => {\n    const { allTags } = useContext(TagContext);\n    const { allBooks } = useContext(BookContext);\n\n    const [title, setTitle] = useState<string>(currentPattern.title ? currentPattern.title : '');\n    const [tags, setTags] = useState<tagType[]>(currentPattern.tags ? currentPattern.tags : []);\n    const [books, setBooks] = useState<book[]>(currentPattern.books ? currentPattern.books : []);\n    const [newTag, setNewTag] = useState<string>('');\n    const [description, setDescription] = useState<string>(\n        currentPattern.description ? currentPattern.description : '',\n    );\n    const [difficulty, setDifficulty] = useState<number>(\n        currentPattern.difficulty ? currentPattern.difficulty : 3,\n    );\n\n    const [patternImages, setPatternImages] = useState<basicImage[]>(\n        currentPattern.patternImages ? currentPattern.patternImages : [],\n    );\n    const [finishedWorkImages, setFinishedWorkImages] = useState<basicImage[]>(\n        currentPattern.finishedWorkImages ? currentPattern.finishedWorkImages : [],\n    );\n\n    const [newPatternImages, setNewPatternImages] = useState<basicImage[]>([]);\n    const [newFinishedWorkImages, setNewFinishedWorkImages] = useState<basicImage[]>([]);\n\n    const [error, setError] = useState<string | null>(null);\n\n    const { id } = currentPattern;\n\n    const allPossibleBooks = useMemo(\n        () => allBooks.filter((possibleBook) => possibleBook.owner === currentPattern.owner),\n        [allBooks, currentPattern.owner],\n    );\n\n    const HandlePatternImageChange = useCallback(\n        (selectedFile: File | null) => {\n            if (selectedFile) {\n                if (imageTypes.includes(selectedFile.type)) {\n                    const maxAllowSize = 5 * 1024 * 1024;\n                    if (selectedFile.size > maxAllowSize) {\n                        setError('Image is too big! Maximum size is 5MB.');\n                    } else {\n                        const storageRef = storage.ref(`patternImages/${id}/${selectedFile.name}`);\n\n                        storageRef.put(selectedFile).on(\n                            'state_changed',\n                            () => {},\n                            (err) => {\n                                setError(err.message);\n                            },\n                            async () => {\n                                const downloadUrl = await storageRef.getDownloadURL();\n                                setNewPatternImages([\n                                    ...newPatternImages,\n                                    { name: selectedFile.name, url: downloadUrl },\n                                ]);\n                            },\n                        );\n                    }\n                } else {\n                    setError('Please use only select an image file (png or jpg)');\n                }\n            }\n        },\n        [id, newPatternImages],\n    );\n\n    const HandleWorkImageChange = useCallback(\n        (selectedFile: File | null) => {\n            if (selectedFile) {\n                if (imageTypes.includes(selectedFile.type)) {\n                    const maxAllowSize = 5 * 1024 * 1024;\n                    if (selectedFile.size > maxAllowSize) {\n                        setError('Image is too big! Maximum size is 5MB.');\n                    } else {\n                        const storageRef = storage.ref(\n                            `finishedWorkImages/${id}/${selectedFile.name}`,\n                        );\n\n                        storageRef.put(selectedFile).on(\n                            'state_changed',\n                            () => {},\n                            (err) => {\n                                setError(err.message);\n                            },\n                            async () => {\n                                const downloadUrl = await storageRef.getDownloadURL();\n                                setNewFinishedWorkImages([\n                                    ...newFinishedWorkImages,\n                                    { name: selectedFile.name, url: downloadUrl },\n                                ]);\n                            },\n                        );\n                    }\n                } else {\n                    setError('Please use only select an image file (png or jpg)');\n                }\n            }\n        },\n        [id, newFinishedWorkImages],\n    );\n\n    const removePaternPicture = useCallback(\n        (index: number) => {\n            if (index < patternImages.length) {\n                const newPictures: basicImage[] = [...patternImages.filter((_, i) => i !== index)];\n                const fileToRemove: basicImage = patternImages[index];\n                const storageRef = storage.ref(`patternImages/${id}/${fileToRemove.name}`);\n                storageRef\n                    .delete()\n                    .then(() => {\n                        setPatternImages(newPictures);\n                    })\n                    .catch((err) => {\n                        setError(err.message);\n                    });\n            } else {\n                const newPictures: basicImage[] = [\n                    ...newPatternImages.filter((_, i) => i !== index),\n                ];\n                const fileToRemove: basicImage = newPatternImages[index];\n                const storageRef = storage.ref(`patternImages/${id}/${fileToRemove.name}`);\n                storageRef\n                    .delete()\n                    .then(() => {\n                        setNewPatternImages(newPictures);\n                    })\n                    .catch((err) => {\n                        setError(err.message);\n                    });\n            }\n        },\n        [id, newPatternImages, patternImages],\n    );\n\n    const removeWorkPicture = useCallback(\n        (index: number) => {\n            if (index < finishedWorkImages.length) {\n                const newPictures: basicImage[] = [\n                    ...finishedWorkImages.filter((_, i) => i !== index),\n                ];\n                const fileToRemove: basicImage = finishedWorkImages[index];\n                const storageRef = storage.ref(`finishedWorkImages/${id}/${fileToRemove.name}`);\n                storageRef\n                    .delete()\n                    .then(() => {\n                        setFinishedWorkImages(newPictures);\n                    })\n                    .catch((err) => {\n                        setError(err.message);\n                    });\n            } else {\n                const newPictures: basicImage[] = [\n                    ...newFinishedWorkImages.filter((_, i) => i !== index),\n                ];\n                const fileToRemove: basicImage = newFinishedWorkImages[index];\n                const storageRef = storage.ref(`finishedWorkImages/${id}/${fileToRemove.name}`);\n                storageRef\n                    .delete()\n                    .then(() => {\n                        setNewFinishedWorkImages(newPictures);\n                    })\n                    .catch((err) => {\n                        setError(err.message);\n                    });\n            }\n        },\n        [finishedWorkImages, id, newFinishedWorkImages],\n    );\n\n    const handleSubmit = useCallback(() => {\n        const data: patternToAdd = {\n            title,\n            description,\n            difficulty,\n            patternImages: [...patternImages, ...newPatternImages],\n            finishedWorkImages: [...finishedWorkImages, ...newFinishedWorkImages],\n            tags: tags.map((t) => t.id),\n            books: books.map((b) => b.id),\n        };\n\n        PatternService.update(id, data)\n            .then(() => {\n                closeModal();\n            })\n            .catch((e) => {\n                setError(e?.message);\n            });\n    }, [\n        closeModal,\n        description,\n        difficulty,\n        finishedWorkImages,\n        id,\n        newFinishedWorkImages,\n        newPatternImages,\n        patternImages,\n        tags,\n        books,\n        title,\n    ]);\n\n    const handleTagAddition = useCallback(() => {\n        if (newTag) {\n            const data: tagToAdd = {\n                label: newTag,\n            };\n\n            const tagId = (new Date().getTime() / 1000).toFixed(0).toString();\n\n            TagService.set(`${tagId}`, data)\n                .then(() => {\n                    setTags([...tags, { id: tagId, value: tagId, label: newTag }]);\n                    setNewTag('');\n                })\n                .catch((e) => {\n                    setError(e?.message);\n                });\n        }\n    }, [newTag, tags]);\n\n    const handleCancel = useCallback(() => {\n        let newError = 'Errors:';\n        newError = '';\n        newPatternImages.forEach((picture) => {\n            storage\n                .ref(`patternImages/${id}/${picture.name}`)\n                .delete()\n                .catch((err: Error) => {\n                    newError.concat(err.message);\n                });\n        });\n        newFinishedWorkImages.forEach((picture) => {\n            storage\n                .ref(`finishedWorkImages/${id}/${picture.name}`)\n                .delete()\n                .catch((err: Error) => {\n                    newError.concat(err.message);\n                });\n        });\n        if (newError.length) {\n            setError(newError);\n        } else {\n            openEdit(false);\n        }\n    }, [id, newFinishedWorkImages, newPatternImages, openEdit]);\n\n    return (\n        <ItemDetail>\n            <ItemHeader>Edit this pattern</ItemHeader>\n\n            <FormGroup>\n                <Label>Title</Label>\n                <Input\n                    block\n                    name=\"patternTitle\"\n                    placeholder=\"Enter title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value ? e.target.value.toString() : '')}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label>Tags</Label>\n                <Select\n                    options={allTags}\n                    value={tags}\n                    isMulti\n                    backspaceRemovesValue\n                    inputValue={newTag}\n                    onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                            handleTagAddition();\n                            e.preventDefault();\n                        }\n                    }}\n                    onInputChange={(e) => {\n                        setNewTag(e);\n                    }}\n                    onChange={(e) => {\n                        setTags([...e]);\n                    }}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label>Difficulty</Label>\n                <DifficultyInput\n                    block\n                    type=\"range\"\n                    name=\"patternDifficulty\"\n                    min={1}\n                    max={5}\n                    step={1}\n                    value={difficulty}\n                    difficulty={difficulty}\n                    onChange={(e) => setDifficulty(parseInt(e.target.value, 10))}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label>Books</Label>\n                <Select\n                    styles={multiSelectWithColour}\n                    options={allPossibleBooks}\n                    value={books}\n                    isMulti\n                    onChange={(e) => {\n                        setBooks([...e]);\n                    }}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label>Description</Label>\n                <CKEditor\n                    editor={ClassicEditor}\n                    data={description}\n                    onChange={(event: any, editor: any) => {\n                        setDescription(editor.getData());\n                    }}\n                />\n            </FormGroup>\n\n            <FormGroup>\n                <Label>Pattern pictures</Label>\n                <>\n                    {patternImages.map((picture: basicImage, index) => (\n                        <FormImageContainer key={picture.name}>\n                            <IconButton onClick={() => removePaternPicture(index)}>\n                                <FontAwesomeIcon icon={['fas', 'trash']} />\n                            </IconButton>\n                            <img src={picture.url} alt=\"pattern\" />\n                        </FormImageContainer>\n                    ))}\n                    {newPatternImages.map((picture: basicImage, index) => (\n                        <FormImageContainer key={picture.name}>\n                            <IconButton onClick={() => removePaternPicture(index)}>\n                                <FontAwesomeIcon icon={['fas', 'trash']} />\n                            </IconButton>\n                            <img src={picture.url} alt=\"pattern\" />\n                        </FormImageContainer>\n                    ))}\n                    <Input\n                        block\n                        type=\"file\"\n                        onChange={(e) =>\n                            HandlePatternImageChange(e?.target?.files ? e?.target?.files[0] : null)\n                        }\n                    />\n                </>\n            </FormGroup>\n\n            <FormGroup>\n                <Label>Finished works</Label>\n                <>\n                    {finishedWorkImages.map((picture, index) => (\n                        <FormImageContainer key={picture.name}>\n                            <IconButton onClick={() => removeWorkPicture(index)}>\n                                <FontAwesomeIcon icon={['fas', 'trash']} />\n                            </IconButton>\n                            <img src={picture.url} alt=\"finishedWork\" />\n                        </FormImageContainer>\n                    ))}\n                    {newFinishedWorkImages.map((picture, index) => (\n                        <FormImageContainer key={picture.name}>\n                            <IconButton onClick={() => removeWorkPicture(index)}>\n                                <FontAwesomeIcon icon={['fas', 'trash']} />\n                            </IconButton>\n                            <img src={picture.url} alt=\"finishedWork\" />\n                        </FormImageContainer>\n                    ))}\n                    <Input\n                        block\n                        type=\"file\"\n                        onChange={(e) =>\n                            HandleWorkImageChange(e?.target?.files ? e?.target?.files[0] : null)\n                        }\n                    />\n                </>\n            </FormGroup>\n\n            {error && <DangerAlert>{error}</DangerAlert>}\n            <ButtonRow>\n                <CancelButton block={false} onClick={handleCancel}>\n                    Cancel\n                </CancelButton>\n\n                <SuccessButton block={false} onClick={handleSubmit}>\n                    Save\n                </SuccessButton>\n            </ButtonRow>\n        </ItemDetail>\n    );\n});\n\nEditPattern.displayName = 'EditPattern';\n\nexport default EditPattern;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx",["194","195","196","197","198"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\styledComponents.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\tagProvider.tsx",["199","200"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\books\\addBook.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\bookServices.tsx",["201","202","203","204","205","206","207"],"import { firestore, auth } from '../firebase';\r\nimport { bookInfo } from '../types';\r\n\r\nconst collectionRef = firestore.collection('/book');\r\n\r\nconst getAll = () => {\r\n    return collectionRef;\r\n};\r\n\r\nconst getAllMine = () => {\r\n    if (auth?.currentUser?.uid) {\r\n        return collectionRef.where('owner', '==', auth.currentUser.uid);\r\n    }\r\n    return collectionRef;\r\n};\r\n\r\nconst getAllOfUser = (uid: string) => {\r\n    return collectionRef.where('owner', '==', uid);\r\n};\r\n\r\nconst create = (data: bookInfo) => {\r\n    return collectionRef.add(data);\r\n};\r\n\r\nconst update = (id: string, value: bookInfo) => {\r\n    return collectionRef.doc(id).update(value);\r\n};\r\n\r\nconst set = (id: string, value: bookInfo) => {\r\n    return collectionRef.doc(id).set(value);\r\n};\r\n\r\nconst remove = (id: string) => {\r\n    return collectionRef.doc(id).delete();\r\n};\r\n\r\nconst BookService = {\r\n    getAll,\r\n    getAllMine,\r\n    getAllOfUser,\r\n    set,\r\n    create,\r\n    update,\r\n    remove,\r\n};\r\n\r\nexport default BookService;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\bookProvider.tsx",["208","209"],"import React, { createContext, useState, useEffect } from 'react';\r\nimport BookService from '../services/bookServices';\r\nimport { book } from '../types';\r\n\r\nexport const BookContext = createContext<{ allBooks: book[] }>({ allBooks: [] });\r\n\r\ninterface PropsType {\r\n    children: JSX.Element;\r\n}\r\n\r\nconst BookProvider: React.FC<PropsType> = ({ children }) => {\r\n    const [allBooks, setAllBooks] = useState<{ allBooks: book[] }>({ allBooks: [] });\r\n\r\n    const onBookDataChange = (items: any) => {\r\n        let loadedBooks: book[] = [];\r\n        loadedBooks = [];\r\n\r\n        items.docs.forEach((item: any) => {\r\n            const { id: bookId } = item;\r\n            const data = item.data();\r\n\r\n            loadedBooks.push({\r\n                id: bookId,\r\n                label: data.label,\r\n                value: bookId,\r\n                colour: data.colour,\r\n                owner: data.owner,\r\n            });\r\n        });\r\n\r\n        setAllBooks({ allBooks: loadedBooks });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = BookService.getAll()\r\n            .orderBy('label', 'asc')\r\n            .onSnapshot(onBookDataChange);\r\n\r\n        return () => unsubscribe();\r\n    }, []);\r\n\r\n    return <BookContext.Provider value={allBooks}>{children}</BookContext.Provider>;\r\n};\r\n\r\nexport default BookProvider;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\selectStyles.tsx",["210","211","212","213","214"],"export default {\r\n    multiValue: (provided: any, state: any) => {\r\n        const backgroundColor = `${state.data.colour}88`;\r\n\r\n        return {\r\n            ...provided,\r\n            backgroundColor,\r\n        };\r\n    },\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\helperFunctions.tsx",["215","216"],"export const isEmail = (email: string) =>\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\r\n        email,\r\n    );\r\n\r\nexport const hi = () => {\r\n    return 'Hi';\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternPrint.jsx",["217","218"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toPrint.jsx",["219","220"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toExport.jsx",["221","222"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\toExport2.jsx",["223","224"],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":21,"column":35,"nodeType":"237","messageId":"238","endLine":21,"endColumn":38,"suggestions":"239"},{"ruleId":"235","severity":1,"message":"236","line":13,"column":35,"nodeType":"237","messageId":"238","endLine":13,"endColumn":38,"suggestions":"240"},{"ruleId":"235","severity":1,"message":"236","line":19,"column":37,"nodeType":"237","messageId":"238","endLine":19,"endColumn":40,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":30,"column":9,"nodeType":"244","messageId":"245","endLine":30,"endColumn":22},{"ruleId":"246","severity":1,"message":"247","line":35,"column":37,"nodeType":"248","messageId":"249","endLine":35,"endColumn":78},{"ruleId":"246","severity":1,"message":"250","line":35,"column":44,"nodeType":"251","messageId":"252","endLine":35,"endColumn":53},{"ruleId":"235","severity":1,"message":"236","line":35,"column":50,"nodeType":"237","messageId":"238","endLine":35,"endColumn":53,"suggestions":"253"},{"ruleId":"246","severity":1,"message":"254","line":35,"column":55,"nodeType":"251","messageId":"252","endLine":35,"endColumn":74},{"ruleId":"235","severity":1,"message":"236","line":35,"column":71,"nodeType":"237","messageId":"238","endLine":35,"endColumn":74,"suggestions":"255"},{"ruleId":"242","severity":1,"message":"243","line":48,"column":13,"nodeType":"244","messageId":"245","endLine":48,"endColumn":26},{"ruleId":"235","severity":1,"message":"236","line":23,"column":65,"nodeType":"237","messageId":"238","endLine":23,"endColumn":68,"suggestions":"256"},{"ruleId":"235","severity":1,"message":"236","line":13,"column":17,"nodeType":"237","messageId":"238","endLine":13,"endColumn":20,"suggestions":"257"},{"ruleId":"242","severity":1,"message":"243","line":17,"column":17,"nodeType":"244","messageId":"245","endLine":17,"endColumn":30},{"ruleId":"235","severity":1,"message":"236","line":141,"column":43,"nodeType":"237","messageId":"238","endLine":141,"endColumn":46,"suggestions":"258"},{"ruleId":"235","severity":1,"message":"236","line":141,"column":56,"nodeType":"237","messageId":"238","endLine":141,"endColumn":59,"suggestions":"259"},{"ruleId":"246","severity":1,"message":"247","line":5,"column":20,"nodeType":"248","messageId":"249","endLine":5,"endColumn":42},{"ruleId":"260","severity":1,"message":"261","line":62,"column":36,"nodeType":"262","messageId":"263","endLine":62,"endColumn":45},{"ruleId":"235","severity":1,"message":"236","line":344,"column":39,"nodeType":"237","messageId":"238","endLine":344,"endColumn":42,"suggestions":"264"},{"ruleId":"235","severity":1,"message":"236","line":344,"column":52,"nodeType":"237","messageId":"238","endLine":344,"endColumn":55,"suggestions":"265"},{"ruleId":"266","severity":2,"message":"267","line":1,"column":13,"nodeType":"251","messageId":"268","endLine":1,"endColumn":17},{"ruleId":"266","severity":2,"message":"269","line":3,"column":6,"nodeType":"251","messageId":"268","endLine":3,"endColumn":14},{"ruleId":"266","severity":2,"message":"270","line":11,"column":13,"nodeType":"251","messageId":"268","endLine":11,"endColumn":20},{"ruleId":"235","severity":1,"message":"236","line":32,"column":17,"nodeType":"237","messageId":"238","endLine":32,"endColumn":20,"suggestions":"271"},{"ruleId":"235","severity":1,"message":"236","line":36,"column":39,"nodeType":"237","messageId":"238","endLine":36,"endColumn":42,"suggestions":"272"},{"ruleId":"246","severity":1,"message":"247","line":6,"column":16,"nodeType":"248","messageId":"249","endLine":6,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":10,"column":20,"nodeType":"248","messageId":"249","endLine":10,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":17,"column":22,"nodeType":"248","messageId":"249","endLine":17,"endColumn":38},{"ruleId":"246","severity":1,"message":"247","line":21,"column":16,"nodeType":"248","messageId":"249","endLine":21,"endColumn":39},{"ruleId":"246","severity":1,"message":"247","line":25,"column":16,"nodeType":"248","messageId":"249","endLine":25,"endColumn":52},{"ruleId":"246","severity":1,"message":"247","line":29,"column":13,"nodeType":"248","messageId":"249","endLine":29,"endColumn":49},{"ruleId":"246","severity":1,"message":"247","line":33,"column":16,"nodeType":"248","messageId":"249","endLine":33,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":317,"column":25,"nodeType":"244","messageId":"245","endLine":317,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":366,"column":39,"nodeType":"237","messageId":"238","endLine":366,"endColumn":42,"suggestions":"273"},{"ruleId":"235","severity":1,"message":"236","line":366,"column":52,"nodeType":"237","messageId":"238","endLine":366,"endColumn":55,"suggestions":"274"},{"ruleId":"246","severity":1,"message":"247","line":6,"column":16,"nodeType":"248","messageId":"249","endLine":6,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":10,"column":16,"nodeType":"248","messageId":"249","endLine":10,"endColumn":35},{"ruleId":"246","severity":1,"message":"247","line":14,"column":16,"nodeType":"248","messageId":"249","endLine":14,"endColumn":48},{"ruleId":"246","severity":1,"message":"247","line":18,"column":13,"nodeType":"248","messageId":"249","endLine":18,"endColumn":45},{"ruleId":"246","severity":1,"message":"247","line":22,"column":16,"nodeType":"248","messageId":"249","endLine":22,"endColumn":31},{"ruleId":"235","severity":1,"message":"236","line":14,"column":37,"nodeType":"237","messageId":"238","endLine":14,"endColumn":40,"suggestions":"275"},{"ruleId":"235","severity":1,"message":"236","line":18,"column":35,"nodeType":"237","messageId":"238","endLine":18,"endColumn":38,"suggestions":"276"},{"ruleId":"246","severity":1,"message":"247","line":6,"column":16,"nodeType":"248","messageId":"249","endLine":6,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":10,"column":20,"nodeType":"248","messageId":"249","endLine":10,"endColumn":25},{"ruleId":"246","severity":1,"message":"247","line":17,"column":22,"nodeType":"248","messageId":"249","endLine":17,"endColumn":38},{"ruleId":"246","severity":1,"message":"247","line":21,"column":16,"nodeType":"248","messageId":"249","endLine":21,"endColumn":35},{"ruleId":"246","severity":1,"message":"247","line":25,"column":16,"nodeType":"248","messageId":"249","endLine":25,"endColumn":48},{"ruleId":"246","severity":1,"message":"247","line":29,"column":13,"nodeType":"248","messageId":"249","endLine":29,"endColumn":45},{"ruleId":"246","severity":1,"message":"247","line":33,"column":16,"nodeType":"248","messageId":"249","endLine":33,"endColumn":31},{"ruleId":"235","severity":1,"message":"236","line":14,"column":38,"nodeType":"237","messageId":"238","endLine":14,"endColumn":41,"suggestions":"277"},{"ruleId":"235","severity":1,"message":"236","line":18,"column":35,"nodeType":"237","messageId":"238","endLine":18,"endColumn":38,"suggestions":"278"},{"ruleId":"246","severity":1,"message":"247","line":2,"column":17,"nodeType":"248","messageId":"249","endLine":2,"endColumn":47},{"ruleId":"246","severity":1,"message":"279","line":2,"column":18,"nodeType":"251","messageId":"252","endLine":2,"endColumn":31},{"ruleId":"235","severity":1,"message":"236","line":2,"column":28,"nodeType":"237","messageId":"238","endLine":2,"endColumn":31,"suggestions":"280"},{"ruleId":"246","severity":1,"message":"281","line":2,"column":33,"nodeType":"251","messageId":"252","endLine":2,"endColumn":43},{"ruleId":"235","severity":1,"message":"236","line":2,"column":40,"nodeType":"237","messageId":"238","endLine":2,"endColumn":43,"suggestions":"282"},{"ruleId":"246","severity":1,"message":"247","line":1,"column":24,"nodeType":"248","messageId":"249","endLine":1,"endColumn":42},{"ruleId":"246","severity":1,"message":"247","line":6,"column":19,"nodeType":"248","messageId":"249","endLine":6,"endColumn":24},{"ruleId":"246","severity":1,"message":"283","line":13,"column":16,"nodeType":"251","messageId":"284","endLine":13,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":18,"column":3,"nodeType":"262","messageId":"249","endLine":18,"endColumn":11},{"ruleId":"246","severity":1,"message":"283","line":13,"column":16,"nodeType":"251","messageId":"284","endLine":13,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":19,"column":3,"nodeType":"262","messageId":"249","endLine":19,"endColumn":11},{"ruleId":"246","severity":1,"message":"283","line":24,"column":16,"nodeType":"251","messageId":"284","endLine":24,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":29,"column":3,"nodeType":"262","messageId":"249","endLine":29,"endColumn":11},{"ruleId":"246","severity":1,"message":"283","line":23,"column":16,"nodeType":"251","messageId":"284","endLine":23,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":28,"column":3,"nodeType":"262","messageId":"249","endLine":28,"endColumn":11},"lines-around-directive",["285"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["286","287"],["288","289"],["290","291"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","Identifier","anyTypedArg",["292","293"],"Argument 'additionalData' should be typed with a non-any type.",["294","295"],["296","297"],["298","299"],["300","301"],["302","303"],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed",["304","305"],["306","307"],"@typescript-eslint/naming-convention","Type Alias name `user` must match one of the following formats: PascalCase","doesNotMatchFormat","Type Alias name `userInfo` must match one of the following formats: PascalCase","Type Alias name `picture` must match one of the following formats: PascalCase",["308","309"],["310","311"],["312","313"],["314","315"],["316","317"],["318","319"],["320","321"],["322","323"],"Argument 'provided' should be typed with a non-any type.",["324","325"],"Argument 'state' should be typed with a non-any type.",["326","327"],"Argument 'props' should be typed.","missingArgType","padding-line-between-statements",{"messageId":"328","fix":"329","desc":"330"},{"messageId":"331","fix":"332","desc":"333"},{"messageId":"328","fix":"334","desc":"330"},{"messageId":"331","fix":"335","desc":"333"},{"messageId":"328","fix":"336","desc":"330"},{"messageId":"331","fix":"337","desc":"333"},{"messageId":"328","fix":"338","desc":"330"},{"messageId":"331","fix":"339","desc":"333"},{"messageId":"328","fix":"340","desc":"330"},{"messageId":"331","fix":"341","desc":"333"},{"messageId":"328","fix":"342","desc":"330"},{"messageId":"331","fix":"343","desc":"333"},{"messageId":"328","fix":"344","desc":"330"},{"messageId":"331","fix":"345","desc":"333"},{"messageId":"328","fix":"346","desc":"330"},{"messageId":"331","fix":"347","desc":"333"},{"messageId":"328","fix":"348","desc":"330"},{"messageId":"331","fix":"349","desc":"333"},{"messageId":"328","fix":"350","desc":"330"},{"messageId":"331","fix":"351","desc":"333"},{"messageId":"328","fix":"352","desc":"330"},{"messageId":"331","fix":"353","desc":"333"},{"messageId":"328","fix":"354","desc":"330"},{"messageId":"331","fix":"355","desc":"333"},{"messageId":"328","fix":"356","desc":"330"},{"messageId":"331","fix":"357","desc":"333"},{"messageId":"328","fix":"358","desc":"330"},{"messageId":"331","fix":"359","desc":"333"},{"messageId":"328","fix":"360","desc":"330"},{"messageId":"331","fix":"361","desc":"333"},{"messageId":"328","fix":"362","desc":"330"},{"messageId":"331","fix":"363","desc":"333"},{"messageId":"328","fix":"364","desc":"330"},{"messageId":"331","fix":"365","desc":"333"},{"messageId":"328","fix":"366","desc":"330"},{"messageId":"331","fix":"367","desc":"333"},{"messageId":"328","fix":"368","desc":"330"},{"messageId":"331","fix":"369","desc":"333"},{"messageId":"328","fix":"370","desc":"330"},{"messageId":"331","fix":"371","desc":"333"},{"messageId":"328","fix":"372","desc":"330"},{"messageId":"331","fix":"373","desc":"333"},"suggestUnknown",{"range":"374","text":"375"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"374","text":"376"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"377","text":"375"},{"range":"377","text":"376"},{"range":"378","text":"375"},{"range":"378","text":"376"},{"range":"379","text":"375"},{"range":"379","text":"376"},{"range":"380","text":"375"},{"range":"380","text":"376"},{"range":"381","text":"375"},{"range":"381","text":"376"},{"range":"382","text":"375"},{"range":"382","text":"376"},{"range":"383","text":"375"},{"range":"383","text":"376"},{"range":"384","text":"375"},{"range":"384","text":"376"},{"range":"385","text":"375"},{"range":"385","text":"376"},{"range":"386","text":"375"},{"range":"386","text":"376"},{"range":"387","text":"375"},{"range":"387","text":"376"},{"range":"388","text":"375"},{"range":"388","text":"376"},{"range":"389","text":"375"},{"range":"389","text":"376"},{"range":"390","text":"375"},{"range":"390","text":"376"},{"range":"391","text":"375"},{"range":"391","text":"376"},{"range":"392","text":"375"},{"range":"392","text":"376"},{"range":"393","text":"375"},{"range":"393","text":"376"},{"range":"394","text":"375"},{"range":"394","text":"376"},{"range":"395","text":"375"},{"range":"395","text":"376"},{"range":"396","text":"375"},{"range":"396","text":"376"},[629,632],"unknown","never",[501,504],[522,525],[1002,1005],[1023,1026],[692,695],[479,482],[4722,4725],[4735,4738],[11879,11882],[11892,11895],[1001,1004],[1139,1142],[13170,13173],[13183,13186],[460,463],[566,569],[487,490],[600,603],[45,48],[57,60]]