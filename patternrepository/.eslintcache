[{"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx":"1","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx":"2","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx":"3","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx":"4","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx":"5","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx":"6","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx":"7","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx":"8","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx":"9","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx":"10","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx":"11","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx":"12","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx":"13","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx":"14","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx":"15","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx":"16","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx":"17","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx":"18","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx":"19","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx":"20","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx":"21","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx":"22","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx":"23","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx":"24","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\styledComponents.tsx":"25"},{"size":307,"mtime":1617579618711,"results":"26","hashOfConfig":"27"},{"size":275,"mtime":1618332485543,"results":"28","hashOfConfig":"27"},{"size":1098,"mtime":1618508402233,"results":"29","hashOfConfig":"27"},{"size":1377,"mtime":1618434409007,"results":"30","hashOfConfig":"27"},{"size":1634,"mtime":1618508191326,"results":"31","hashOfConfig":"27"},{"size":1550,"mtime":1617579618711,"results":"32","hashOfConfig":"27"},{"size":1482,"mtime":1618500974698,"results":"33","hashOfConfig":"27"},{"size":135,"mtime":1618332767713,"results":"34","hashOfConfig":"27"},{"size":423,"mtime":1618332668472,"results":"35","hashOfConfig":"27"},{"size":2841,"mtime":1618505042936,"results":"36","hashOfConfig":"27"},{"size":415,"mtime":1617579618712,"results":"37","hashOfConfig":"27"},{"size":1717,"mtime":1618504807118,"results":"38","hashOfConfig":"27"},{"size":4484,"mtime":1618524160114,"results":"39","hashOfConfig":"27"},{"size":2963,"mtime":1618523510887,"results":"40","hashOfConfig":"27"},{"size":1362,"mtime":1617579618712,"results":"41","hashOfConfig":"27"},{"size":1676,"mtime":1618521688006,"results":"42","hashOfConfig":"27"},{"size":12808,"mtime":1618521671497,"results":"43","hashOfConfig":"27"},{"size":196,"mtime":1617283949558,"results":"44","hashOfConfig":"27"},{"size":3103,"mtime":1618516345146,"results":"45","hashOfConfig":"27"},{"size":901,"mtime":1618172623977,"results":"46","hashOfConfig":"27"},{"size":1037,"mtime":1618336456802,"results":"47","hashOfConfig":"27"},{"size":3261,"mtime":1618518554862,"results":"48","hashOfConfig":"27"},{"size":14860,"mtime":1618521642290,"results":"49","hashOfConfig":"27"},{"size":684,"mtime":1618172623977,"results":"50","hashOfConfig":"27"},{"size":8845,"mtime":1618523686935,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"g8f8c4",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\index.tsx",[],["108","109","110","111","112"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\App.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\navigation.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\providers\\userProvider.tsx",["113"],"import React, { createContext, useState, useEffect } from 'react';\nimport { auth, generateUserDocument } from '../firebase';\nimport { user } from '../types';\n\nexport const UserContext = createContext<{ user: user }>({\n    user: null,\n});\n\ninterface PropsType {\n    children: JSX.Element;\n}\n\nconst UserProvider: React.FC<PropsType> = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState<{ user: user }>({\n        user: null,\n    });\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(async (userAuth) => {\n            if (userAuth) {\n                const signedUser: any = await generateUserDocument(userAuth, null);\n                setCurrentUser({\n                    user: {\n                        uid: signedUser?.uid,\n                        email: signedUser?.email,\n                        username: signedUser?.username,\n                        avatar: signedUser?.avatar,\n                        description: signedUser?.description,\n                        darkTheme: signedUser?.darkTheme,\n                    },\n                });\n            } else {\n                setCurrentUser({ user: null });\n            }\n        });\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n\n    return <UserContext.Provider value={currentUser}>{children}</UserContext.Provider>;\n};\n\nexport default UserProvider;\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\pageHeader.tsx",["114"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebase.tsx",["115","116","117","118","119","120","121","122"],"import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nif (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig);\r\n} else {\r\n    firebase.app(); // if already initialized, use that one\r\n}\r\n\r\n// firebase.initializeApp();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nconst getUserDocument = async (uid: any) => {\r\n    if (!uid) return null;\r\n    try {\r\n        const userDocument = await firestore.doc(`users/${uid}`).get();\r\n        const userAvatar = await storage.ref(`/avatars/${uid}`).getDownloadURL();\r\n        return {\r\n            uid,\r\n            ...userDocument.data(),\r\n            avatar: userAvatar,\r\n        };\r\n    } catch (error) {\r\n        console.error('Error fetching user', error);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const generateUserDocument = async (user: any, additionalData: any) => {\r\n    if (!user) return {};\r\n    const userRef = firestore.doc(`users/${user.uid}`);\r\n    const snapshot = await userRef.get();\r\n    if (!snapshot.exists) {\r\n        const { email } = user;\r\n        try {\r\n            await userRef.set({\r\n                username: user.username,\r\n                email,\r\n                ...additionalData,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error creating user document', error);\r\n        }\r\n    }\r\n    return getUserDocument(user.uid);\r\n};\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\generalComponents\\errorCard.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signUp.tsx",["123"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\firebaseConfig.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\login\\signIn.tsx",["124","125"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileEdit.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\userProfile\\profileView.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\hooks\\useStorage.tsx",["126"],"import { useState } from 'react';\r\n\r\nimport { storage } from '../firebase';\r\n\r\nconst useStorage = (file: File | null) => {\r\n    const [progress, setProgress] = useState<number>(0);\r\n    const [error, setError] = useState<string | null>(null);\r\n    const [url, setUrl] = useState<string | null>(null);\r\n\r\n    // runs every time the file value changes\r\n    const uploadImage = (storageName: string, pictureName: string) => {\r\n        if (file) {\r\n            // storage ref\r\n            const storageRef = storage.ref(`${storageName}/${pictureName}`);\r\n\r\n            storageRef.put(file).on(\r\n                'state_changed',\r\n                (snap) => {\r\n                    // track the upload progress\r\n                    const percentage = Math.round((snap.bytesTransferred / snap.totalBytes) * 100);\r\n                    setProgress(percentage);\r\n                },\r\n                (err) => {\r\n                    setError(err.message);\r\n                },\r\n                async () => {\r\n                    // get the public download img url\r\n                    const downloadUrl = await storageRef.getDownloadURL();\r\n\r\n                    // save the url to local state\r\n                    setUrl(downloadUrl);\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    return { progress, url, error, uploadImage };\r\n};\r\nexport default useStorage;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\index.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\addPattern.tsx",["127","128","129","130","131"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\types.tsx",["132","133","134"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\list.tsx",["135","136"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\patternServices.tsx",["137","138","139","140","141","142"],"import { firestore, auth } from '../firebase';\r\nimport { patternToAdd } from '../types';\r\n\r\nconst collectionRef = firestore.collection('/patterns');\r\n\r\nconst getAll = () => {\r\n    return collectionRef;\r\n};\r\n\r\nconst getAllMine = () => {\r\n    if (auth?.currentUser?.uid) {\r\n        return collectionRef.where('owner', '==', auth.currentUser.uid);\r\n    }\r\n    return [];\r\n};\r\n\r\nconst create = (data: patternToAdd) => {\r\n    return collectionRef.add(data);\r\n};\r\n\r\nconst update = (id: string, value: patternToAdd) => {\r\n    return collectionRef.doc(id).update(value);\r\n};\r\n\r\nconst set = (id: string, value: patternToAdd) => {\r\n    return collectionRef.doc(id).set(value);\r\n};\r\n\r\nconst remove = (id: string) => {\r\n    return collectionRef.doc(id).delete();\r\n};\r\n\r\nconst PatternService = {\r\n    getAll,\r\n    getAllMine,\r\n    set,\r\n    create,\r\n    update,\r\n    remove,\r\n};\r\n\r\nexport default PatternService;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\patternContainer.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\viewPattern.tsx",[],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\components\\patternList\\editPattern.tsx",["143","144","145","146"],"C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\logic\\services\\tagServices.tsx",["147","148","149","150","151"],"import { firestore } from '../firebase';\r\nimport { tagToAdd } from '../types';\r\n\r\nconst collectionRef = firestore.collection('/tags');\r\n\r\nconst getAll = () => {\r\n    return collectionRef;\r\n};\r\n\r\nconst create = (data: tagToAdd) => {\r\n    return collectionRef.add(data);\r\n};\r\n\r\nconst update = (id: string, value: tagToAdd) => {\r\n    return collectionRef.doc(id).update(value);\r\n};\r\n\r\nconst set = (id: string, value: tagToAdd) => {\r\n    return collectionRef.doc(id).set(value);\r\n};\r\n\r\nconst remove = (id: string) => {\r\n    return collectionRef.doc(id).delete();\r\n};\r\n\r\nconst TagService = {\r\n    getAll,\r\n    set,\r\n    create,\r\n    update,\r\n    remove,\r\n};\r\n\r\nexport default TagService;\r\n","C:\\Dokumenty\\GitHub\\patternRepository\\patternrepository\\src\\design\\styledComponents.tsx",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":21,"column":35,"nodeType":"164","messageId":"165","endLine":21,"endColumn":38,"suggestions":"166"},{"ruleId":"162","severity":1,"message":"163","line":18,"column":35,"nodeType":"164","messageId":"165","endLine":18,"endColumn":38,"suggestions":"167"},{"ruleId":"162","severity":1,"message":"163","line":19,"column":37,"nodeType":"164","messageId":"165","endLine":19,"endColumn":40,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":30,"column":9,"nodeType":"171","messageId":"172","endLine":30,"endColumn":22},{"ruleId":"173","severity":1,"message":"174","line":35,"column":37,"nodeType":"175","messageId":"176","endLine":35,"endColumn":78},{"ruleId":"173","severity":1,"message":"177","line":35,"column":44,"nodeType":"178","messageId":"179","endLine":35,"endColumn":53},{"ruleId":"162","severity":1,"message":"163","line":35,"column":50,"nodeType":"164","messageId":"165","endLine":35,"endColumn":53,"suggestions":"180"},{"ruleId":"173","severity":1,"message":"181","line":35,"column":55,"nodeType":"178","messageId":"179","endLine":35,"endColumn":74},{"ruleId":"162","severity":1,"message":"163","line":35,"column":71,"nodeType":"164","messageId":"165","endLine":35,"endColumn":74,"suggestions":"182"},{"ruleId":"169","severity":1,"message":"170","line":48,"column":13,"nodeType":"171","messageId":"172","endLine":48,"endColumn":26},{"ruleId":"162","severity":1,"message":"163","line":21,"column":65,"nodeType":"164","messageId":"165","endLine":21,"endColumn":68,"suggestions":"183"},{"ruleId":"162","severity":1,"message":"163","line":13,"column":17,"nodeType":"164","messageId":"165","endLine":13,"endColumn":20,"suggestions":"184"},{"ruleId":"169","severity":1,"message":"170","line":17,"column":17,"nodeType":"171","messageId":"172","endLine":17,"endColumn":30},{"ruleId":"173","severity":1,"message":"174","line":5,"column":20,"nodeType":"175","messageId":"176","endLine":5,"endColumn":42},{"ruleId":"185","severity":1,"message":"186","line":55,"column":36,"nodeType":"187","messageId":"188","endLine":55,"endColumn":45},{"ruleId":"162","severity":1,"message":"163","line":63,"column":37,"nodeType":"164","messageId":"165","endLine":63,"endColumn":40,"suggestions":"189"},{"ruleId":"162","severity":1,"message":"163","line":67,"column":35,"nodeType":"164","messageId":"165","endLine":67,"endColumn":38,"suggestions":"190"},{"ruleId":"162","severity":1,"message":"163","line":311,"column":39,"nodeType":"164","messageId":"165","endLine":311,"endColumn":42,"suggestions":"191"},{"ruleId":"162","severity":1,"message":"163","line":311,"column":52,"nodeType":"164","messageId":"165","endLine":311,"endColumn":55,"suggestions":"192"},{"ruleId":"193","severity":2,"message":"194","line":1,"column":13,"nodeType":"178","messageId":"195","endLine":1,"endColumn":17},{"ruleId":"193","severity":2,"message":"196","line":3,"column":6,"nodeType":"178","messageId":"195","endLine":3,"endColumn":14},{"ruleId":"193","severity":2,"message":"197","line":11,"column":13,"nodeType":"178","messageId":"195","endLine":11,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":25,"column":46,"nodeType":"164","messageId":"165","endLine":25,"endColumn":49,"suggestions":"198"},{"ruleId":"162","severity":1,"message":"163","line":29,"column":35,"nodeType":"164","messageId":"165","endLine":29,"endColumn":38,"suggestions":"199"},{"ruleId":"173","severity":1,"message":"174","line":6,"column":16,"nodeType":"175","messageId":"176","endLine":6,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":10,"column":20,"nodeType":"175","messageId":"176","endLine":10,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":17,"column":16,"nodeType":"175","messageId":"176","endLine":17,"endColumn":39},{"ruleId":"173","severity":1,"message":"174","line":21,"column":16,"nodeType":"175","messageId":"176","endLine":21,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":25,"column":13,"nodeType":"175","messageId":"176","endLine":25,"endColumn":49},{"ruleId":"173","severity":1,"message":"174","line":29,"column":16,"nodeType":"175","messageId":"176","endLine":29,"endColumn":31},{"ruleId":"162","severity":1,"message":"163","line":61,"column":37,"nodeType":"164","messageId":"165","endLine":61,"endColumn":40,"suggestions":"200"},{"ruleId":"162","severity":1,"message":"163","line":65,"column":35,"nodeType":"164","messageId":"165","endLine":65,"endColumn":38,"suggestions":"201"},{"ruleId":"162","severity":1,"message":"163","line":330,"column":39,"nodeType":"164","messageId":"165","endLine":330,"endColumn":42,"suggestions":"202"},{"ruleId":"162","severity":1,"message":"163","line":330,"column":52,"nodeType":"164","messageId":"165","endLine":330,"endColumn":55,"suggestions":"203"},{"ruleId":"173","severity":1,"message":"174","line":6,"column":16,"nodeType":"175","messageId":"176","endLine":6,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":10,"column":16,"nodeType":"175","messageId":"176","endLine":10,"endColumn":35},{"ruleId":"173","severity":1,"message":"174","line":14,"column":16,"nodeType":"175","messageId":"176","endLine":14,"endColumn":48},{"ruleId":"173","severity":1,"message":"174","line":18,"column":13,"nodeType":"175","messageId":"176","endLine":18,"endColumn":45},{"ruleId":"173","severity":1,"message":"174","line":22,"column":16,"nodeType":"175","messageId":"176","endLine":22,"endColumn":31},"lines-around-directive",["204"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["205","206"],["207","208"],["209","210"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","Argument 'user' should be typed with a non-any type.","Identifier","anyTypedArg",["211","212"],"Argument 'additionalData' should be typed with a non-any type.",["213","214"],["215","216"],["217","218"],"func-names","Unexpected unnamed function.","FunctionExpression","unnamed",["219","220"],["221","222"],["223","224"],["225","226"],"@typescript-eslint/naming-convention","Type Alias name `user` must match one of the following formats: PascalCase","doesNotMatchFormat","Type Alias name `userInfo` must match one of the following formats: PascalCase","Type Alias name `picture` must match one of the following formats: PascalCase",["227","228"],["229","230"],["231","232"],["233","234"],["235","236"],["237","238"],"padding-line-between-statements",{"messageId":"239","fix":"240","desc":"241"},{"messageId":"242","fix":"243","desc":"244"},{"messageId":"239","fix":"245","desc":"241"},{"messageId":"242","fix":"246","desc":"244"},{"messageId":"239","fix":"247","desc":"241"},{"messageId":"242","fix":"248","desc":"244"},{"messageId":"239","fix":"249","desc":"241"},{"messageId":"242","fix":"250","desc":"244"},{"messageId":"239","fix":"251","desc":"241"},{"messageId":"242","fix":"252","desc":"244"},{"messageId":"239","fix":"253","desc":"241"},{"messageId":"242","fix":"254","desc":"244"},{"messageId":"239","fix":"255","desc":"241"},{"messageId":"242","fix":"256","desc":"244"},{"messageId":"239","fix":"257","desc":"241"},{"messageId":"242","fix":"258","desc":"244"},{"messageId":"239","fix":"259","desc":"241"},{"messageId":"242","fix":"260","desc":"244"},{"messageId":"239","fix":"261","desc":"241"},{"messageId":"242","fix":"262","desc":"244"},{"messageId":"239","fix":"263","desc":"241"},{"messageId":"242","fix":"264","desc":"244"},{"messageId":"239","fix":"265","desc":"241"},{"messageId":"242","fix":"266","desc":"244"},{"messageId":"239","fix":"267","desc":"241"},{"messageId":"242","fix":"268","desc":"244"},{"messageId":"239","fix":"269","desc":"241"},{"messageId":"242","fix":"270","desc":"244"},{"messageId":"239","fix":"271","desc":"241"},{"messageId":"242","fix":"272","desc":"244"},{"messageId":"239","fix":"273","desc":"241"},{"messageId":"242","fix":"274","desc":"244"},{"messageId":"239","fix":"275","desc":"241"},{"messageId":"242","fix":"276","desc":"244"},"suggestUnknown",{"range":"277","text":"278"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"277","text":"279"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"280","text":"278"},{"range":"280","text":"279"},{"range":"281","text":"278"},{"range":"281","text":"279"},{"range":"282","text":"278"},{"range":"282","text":"279"},{"range":"283","text":"278"},{"range":"283","text":"279"},{"range":"284","text":"278"},{"range":"284","text":"279"},{"range":"285","text":"278"},{"range":"285","text":"279"},{"range":"286","text":"278"},{"range":"286","text":"279"},{"range":"287","text":"278"},{"range":"287","text":"279"},{"range":"288","text":"278"},{"range":"288","text":"279"},{"range":"289","text":"278"},{"range":"289","text":"279"},{"range":"290","text":"278"},{"range":"290","text":"279"},{"range":"291","text":"278"},{"range":"291","text":"279"},{"range":"292","text":"278"},{"range":"292","text":"279"},{"range":"293","text":"278"},{"range":"293","text":"279"},{"range":"294","text":"278"},{"range":"294","text":"279"},{"range":"295","text":"278"},{"range":"295","text":"279"},[609,612],"unknown","never",[490,493],[522,525],[1007,1010],[1028,1031],[614,617],[467,470],[2103,2106],[2209,2212],[10476,10479],[10489,10492],[654,657],[776,779],[2176,2179],[2286,2289],[11556,11559],[11569,11572]]